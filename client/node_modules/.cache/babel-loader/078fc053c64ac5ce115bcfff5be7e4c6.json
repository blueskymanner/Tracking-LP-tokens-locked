{"ast":null,"code":"var _jsxFileName = \"E:\\\\sample\\\\track_locked_projects\\\\react_table\\\\src\\\\Table\\\\GlobalFilter.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useTable, useGlobalFilter, useAsyncDebounce, useSortBy, usePagination } from \"react-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const GlobalFilter = _ref => {\n  _s();\n\n  let {\n    preGlobalFilteredRows,\n    globalFilter,\n    setGlobalFilter\n  } = _ref;\n  const count = preGlobalFilteredRows.length;\n  const [value, setValue] = React.useState(globalFilter);\n  const onChange = useAsyncDebounce(value => {\n    setGlobalFilter(value || undefined);\n  }, 200);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [\"Search: \", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: value || \"\",\n      onChange: e => {\n        setValue(e.target.value);\n        onChange(e.target.value);\n      },\n      placeholder: `Enter Keyword`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }, this);\n};\n\n_s(GlobalFilter, \"u76gItWTPW4jhTYSCcNG7/LfbyA=\", false, function () {\n  return [useAsyncDebounce];\n});\n\n_c = GlobalFilter;\nexport const Actiontable = _ref2 => {\n  _s2();\n\n  let {\n    columns,\n    data\n  } = _ref2;\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    footerGroups,\n    prepareRow,\n    page,\n    canPreviousPage,\n    canNextPage,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: {\n      pageIndex,\n      pageSize\n    },\n    state,\n    preGlobalFilteredRows,\n    setGlobalFilter\n  } = useTable({\n    columns,\n    data,\n    initialState: {\n      pageSize: 20\n    }\n  }, useGlobalFilter, useSortBy, usePagination); // console.log();\n  // Render the UI for your table\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tablesection\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"th\", {\n                colSpan: 100,\n                style: {\n                  textAlign: \"left\",\n                  padding: 10,\n                  background: \"yellow\"\n                },\n                children: /*#__PURE__*/_jsxDEV(GlobalFilter, {\n                  preGlobalFilteredRows: preGlobalFilteredRows,\n                  globalFilter: state.globalFilter,\n                  setGlobalFilter: setGlobalFilter\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), headerGroups.map(group => /*#__PURE__*/_jsxDEV(\"tr\", { ...group.getHeaderGroupProps(),\n              children: group.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(column.getSortByToggleProps()),\n                children: column.render(\"Header\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n            children: page.map((row, i) => {\n              prepareRow(row);\n              return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n                children: row.cells.map(cell => {\n                  return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                    children: cell.render(\"Cell\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 32\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => gotoPage(0),\n          disabled: !canPreviousPage,\n          children: \"<<\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => previousPage(),\n          disabled: !canPreviousPage,\n          children: \"<\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => nextPage(),\n          disabled: !canNextPage,\n          children: \">\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => gotoPage(pageCount - 1),\n          disabled: !canNextPage,\n          children: \">>\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Page\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [pageIndex + 1, \" of \", pageCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"| Go to page:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            defaultValue: pageIndex + 1,\n            onChange: e => {\n              const page = e.target.value ? Number(e.target.value) - 1 : 0;\n              gotoPage(page);\n            },\n            style: {\n              width: \"100px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: pageSize,\n          onChange: e => {\n            setPageSize(Number(e.target.value));\n          },\n          children: [20, 30, 40, 50].map(pageSize => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: pageSize,\n            children: [\"Show \", pageSize]\n          }, pageSize, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s2(Actiontable, \"hixKESGAEOtHz5M8fZHHGgOeQC0=\", false, function () {\n  return [useTable];\n});\n\n_c2 = Actiontable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GlobalFilter\");\n$RefreshReg$(_c2, \"Actiontable\");","map":{"version":3,"sources":["E:/sample/track_locked_projects/react_table/src/Table/GlobalFilter.js"],"names":["React","useEffect","useState","useTable","useGlobalFilter","useAsyncDebounce","useSortBy","usePagination","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","count","length","value","setValue","onChange","undefined","e","target","Actiontable","columns","data","getTableProps","getTableBodyProps","headerGroups","footerGroups","prepareRow","page","canPreviousPage","canNextPage","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageIndex","pageSize","initialState","textAlign","padding","background","map","group","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","row","i","getRowProps","cells","cell","getCellProps","Number","width"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport { useTable, useGlobalFilter, useAsyncDebounce, useSortBy, usePagination } from \"react-table\";\r\n\r\n\r\nexport const GlobalFilter =({\r\n    preGlobalFilteredRows,\r\n    globalFilter,\r\n    setGlobalFilter\r\n  }) => {\r\n    const count = preGlobalFilteredRows.length;\r\n    const [value, setValue] = React.useState(globalFilter);\r\n    const onChange = useAsyncDebounce((value) => {\r\n      setGlobalFilter(value || undefined);\r\n    }, 200);\r\n  \r\n    return (\r\n      <span>\r\n        Search: {\" \"}\r\n        <input\r\n          value={value || \"\"}\r\n          onChange={(e) => {\r\n            setValue(e.target.value);\r\n            onChange(e.target.value);\r\n          }}\r\n          placeholder={`Enter Keyword`}\r\n        />\r\n      </span>\r\n    );\r\n  }\r\n  \r\n  export const Actiontable = ({ columns, data }) => {\r\n    const {\r\n      getTableProps,\r\n      getTableBodyProps,\r\n      headerGroups,\r\n      footerGroups,\r\n      prepareRow,\r\n      page,\r\n      canPreviousPage,\r\n      canNextPage,\r\n      pageCount,\r\n      gotoPage,\r\n      nextPage,\r\n      previousPage,\r\n      setPageSize,\r\n      state: { pageIndex, pageSize },\r\n      state,\r\n      preGlobalFilteredRows,\r\n      setGlobalFilter\r\n    } = useTable(\r\n      {\r\n        columns,\r\n        data,\r\n        initialState: { pageSize: 20 }\r\n      },\r\n      useGlobalFilter, useSortBy, usePagination\r\n    );\r\n  \r\n    // console.log();\r\n  \r\n    // Render the UI for your table\r\n    return (\r\n      <>\r\n        <div className=\"content\">\r\n          <div className=\"tablesection\">\r\n            <table\r\n              {...getTableProps()}\r\n            >\r\n              <thead>\r\n                <tr>\r\n                  <th\r\n                    colSpan={100}\r\n                    style={{\r\n                      textAlign: \"left\",\r\n                      padding: 10,\r\n                      background: \"yellow\"\r\n                    }}\r\n                  >\r\n                    <GlobalFilter\r\n                      preGlobalFilteredRows={preGlobalFilteredRows}\r\n                      globalFilter={state.globalFilter}\r\n                      setGlobalFilter={setGlobalFilter}\r\n                    />\r\n                  </th>\r\n                </tr>\r\n  \r\n                {headerGroups.map((group) => (\r\n                  <tr {...group.getHeaderGroupProps()}>\r\n                    {group.headers.map((column) => (\r\n                      <th {...column.getHeaderProps(column.getSortByToggleProps())}>{column.render(\"Header\")}\r\n                      {/* <span>{\r\n                        column.isSorted\r\n                            ? column.isSortedDesc\r\n                                  ? ' ?'\r\n                                  : ' ?'\r\n                            : ''\r\n                      }</span> */}\r\n                      </th>\r\n                    ))}\r\n                  </tr>\r\n                ))}\r\n              </thead>\r\n              <tbody {...getTableBodyProps()}>\r\n                {page.map((row, i) => {\r\n                  prepareRow(row);\r\n                  return (\r\n                    <tr {...row.getRowProps()}>\r\n                      {row.cells.map((cell) => {\r\n                        return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>;\r\n                      })}\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n              {/* <tfoot>\r\n                {footerGroups.map((group) => (\r\n                  <tr {...group.getFooterGroupProps()}>\r\n                    {group.headers.map((column) => (\r\n                      <td {...column.getFooterProps()}>{column.render(\"Footer\")}</td>\r\n                    ))}\r\n                  </tr>\r\n                ))}\r\n              </tfoot> */}\r\n            </table>\r\n          </div>\r\n  \r\n          <div className=\"pagination\">\r\n            <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n              {\"<<\"}\r\n            </button>{\" \"}\r\n            <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n              {\"<\"}\r\n            </button>{\" \"}\r\n            <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n              {\">\"}\r\n            </button>{\" \"}\r\n            <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n              {\">>\"}\r\n            </button>{\" \"}\r\n            <span>\r\n              Page{\" \"}\r\n              <strong>\r\n                {pageIndex + 1} of {pageCount}\r\n              </strong>{\" \"}\r\n            </span>\r\n            <span>\r\n              | Go to page:{\" \"}\r\n              <input\r\n                type=\"number\"\r\n                defaultValue={pageIndex + 1}\r\n                onChange={(e) => {\r\n                  const page = e.target.value ? Number(e.target.value) - 1 : 0;\r\n                  gotoPage(page);\r\n                }}\r\n                style={{ width: \"100px\" }}\r\n              />\r\n            </span>{\" \"}\r\n            <select\r\n              value={pageSize}\r\n              onChange={(e) => {\r\n                setPageSize(Number(e.target.value));\r\n              }}\r\n            >\r\n              {[20, 30, 40, 50].map((pageSize) => (\r\n                <option key={pageSize} value={pageSize}>\r\n                  Show {pageSize}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }"]},"metadata":{},"sourceType":"module"}