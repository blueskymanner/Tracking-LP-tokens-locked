{"ast":null,"code":"var _jsxFileName = \"E:\\\\sample\\\\track_locked_projects\\\\react_table\\\\src\\\\Table\\\\index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React from \"react\";\nimport { useTable, useGlobalFilter, useAsyncDebounce, useSortBy, usePagination } from \"react-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GlobalFilter(_ref) {\n  _s();\n\n  let {\n    preGlobalFilteredRows,\n    globalFilter,\n    setGlobalFilter\n  } = _ref;\n  const count = preGlobalFilteredRows.length;\n  const [value, setValue] = React.useState(globalFilter);\n  const onChange = useAsyncDebounce(value => {\n    setGlobalFilter(value || undefined);\n  }, 200);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [\"Search:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: value || \"\",\n      onChange: e => {\n        setValue(e.target.value);\n        onChange(e.target.value);\n      },\n      placeholder: `${count} records...`,\n      style: {\n        fontSize: \"1.1rem\",\n        border: \"0\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GlobalFilter, \"u76gItWTPW4jhTYSCcNG7/LfbyA=\", false, function () {\n  return [useAsyncDebounce];\n});\n\n_c = GlobalFilter;\n\nfunction Tablesearch(_ref2) {\n  _s2();\n\n  let {\n    columns,\n    data\n  } = _ref2;\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    footerGroups,\n    rows,\n    prepareRow,\n    page,\n    state,\n    preGlobalFilteredRows,\n    setGlobalFilter\n  } = useTable({\n    columns,\n    data\n  }, useGlobalFilter, useSortBy); // Render the UI for your table\n\n  return /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n    border: 1,\n    style: {\n      borderCollapse: \"collapse\",\n      width: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: [headerGroups.map(group => /*#__PURE__*/_jsxDEV(\"tr\", { ...group.getHeaderGroupProps(),\n        children: group.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(column.getSortByToggleProps()),\n          children: [column.render(\"Header\"), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: column.isSorted ? column.isSortedDesc ? ' ?' : ' ?' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 102\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"th\", {\n          colSpan: 100,\n          style: {\n            textAlign: \"left\",\n            padding: 10,\n            background: \"yellow\"\n          },\n          children: /*#__PURE__*/_jsxDEV(GlobalFilter, {\n            preGlobalFilteredRows: preGlobalFilteredRows,\n            globalFilter: state.globalFilter,\n            setGlobalFilter: setGlobalFilter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n      children: rows.map((row, i) => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n          children: row.cells.map(cell => {\n            return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n              children: cell.render(\"Cell\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 24\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n      children: footerGroups.map(group => /*#__PURE__*/_jsxDEV(\"tr\", { ...group.getFooterGroupProps(),\n        children: group.headers.map(column => /*#__PURE__*/_jsxDEV(\"td\", { ...column.getFooterProps(),\n          children: column.render(\"Footer\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Tablesearch, \"gY1BnU/8v1JFOFruQBjgZRCuf1E=\", false, function () {\n  return [useTable];\n});\n\n_c2 = Tablesearch;\n\nfunction Table() {\n  _s3();\n\n  const columns = React.useMemo(() => [{\n    Header: \"Heading 1\",\n    Footer: \"Footer 1\",\n    columns: [{\n      Header: \"Sub Heading 1a\",\n      accessor: \"firstcolumn\"\n    }, {\n      Header: \"Sub Heading 1b\",\n      accessor: \"secondcolumn\"\n    }]\n  }, {\n    Header: \"Heading 2\",\n    Footer: \"Footer 2\",\n    columns: [{\n      accessor: \"thirdcolumn\"\n    }]\n  }], []);\n  const data = React.useMemo(() => [{\n    firstcolumn: \"Row 1 Column 1\",\n    secondcolumn: \"Row 1 Column 2\",\n    thirdcolumn: \"Row 1 Column 3\"\n  }, {\n    firstcolumn: \"Row 2 Column 1\",\n    secondcolumn: \"Row 2 Column 2\",\n    thirdcolumn: \"Row 2 Column 3\"\n  }, {\n    firstcolumn: \"Row 3 Column 1\",\n    secondcolumn: \"Row 3 Column 2\",\n    thirdcolumn: \"Row 3 Column 3\"\n  }, {\n    firstcolumn: \"Row 4 Column 1\",\n    secondcolumn: \"Row 4 Column 2\",\n    thirdcolumn: \"Row 4 Column 3\"\n  }, {\n    firstcolumn: \"Row 5 Column 1\",\n    secondcolumn: \"Row 5 Column 2\",\n    thirdcolumn: \"Row 5 Column 3\"\n  }, {\n    firstcolumn: \"Row 6 Column 1\",\n    secondcolumn: \"Row 6 Column 2\",\n    thirdcolumn: \"Row 6 Column 3\"\n  }, {\n    firstcolumn: \"Row 7 Column 1\",\n    secondcolumn: \"Row 7 Column 2\",\n    thirdcolumn: \"Row 7 Column 3\"\n  }, {\n    firstcolumn: \"Row 8 Column 1\",\n    secondcolumn: \"Row 8 Column 2\",\n    thirdcolumn: \"Row 8 Column 3\"\n  }, {\n    firstcolumn: \"Row 9 Column 1\",\n    secondcolumn: \"Row 9 Column 2\",\n    thirdcolumn: \"Row 9 Column 3\"\n  }, {\n    firstcolumn: \"Row 10 Column 1\",\n    secondcolumn: \"Row 10 Column 2\",\n    thirdcolumn: \"Row 10 Column 3\"\n  }, {\n    firstcolumn: \"Row 11 Column 1\",\n    secondcolumn: \"Row 11 Column 2\",\n    thirdcolumn: \"Row 11 Column 3\"\n  }, {\n    firstcolumn: \"Row 12 Column 1\",\n    secondcolumn: \"Row 12 Column 2\",\n    thirdcolumn: \"Row 12 Column 3\"\n  }], []);\n  return /*#__PURE__*/_jsxDEV(Tablesearch, {\n    columns: columns,\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 10\n  }, this);\n}\n\n_s3(Table, \"7zObr1GywQUmP9L3sfy/4IDluAk=\");\n\n_c3 = Table;\nexport default Table;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"GlobalFilter\");\n$RefreshReg$(_c2, \"Tablesearch\");\n$RefreshReg$(_c3, \"Table\");","map":{"version":3,"sources":["E:/sample/track_locked_projects/react_table/src/Table/index.js"],"names":["React","useTable","useGlobalFilter","useAsyncDebounce","useSortBy","usePagination","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","count","length","value","setValue","useState","onChange","undefined","e","target","fontSize","border","Tablesearch","columns","data","getTableProps","getTableBodyProps","headerGroups","footerGroups","rows","prepareRow","page","state","borderCollapse","width","map","group","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","textAlign","padding","background","row","i","getRowProps","cells","cell","getCellProps","getFooterGroupProps","getFooterProps","Table","useMemo","Header","Footer","accessor","firstcolumn","secondcolumn","thirdcolumn"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useTable, useGlobalFilter, useAsyncDebounce, useSortBy, usePagination } from \"react-table\";\r\n\r\nfunction GlobalFilter({\r\n  preGlobalFilteredRows,\r\n  globalFilter,\r\n  setGlobalFilter\r\n}) {\r\n  const count = preGlobalFilteredRows.length;\r\n  const [value, setValue] = React.useState(globalFilter);\r\n  const onChange = useAsyncDebounce((value) => {\r\n    setGlobalFilter(value || undefined);\r\n  }, 200);\r\n\r\n  return (\r\n    <span>\r\n      Search:{\" \"}\r\n      <input\r\n        value={value || \"\"}\r\n        onChange={(e) => {\r\n          setValue(e.target.value);\r\n          onChange(e.target.value);\r\n        }}\r\n        placeholder={`${count} records...`}\r\n        style={{\r\n          fontSize: \"1.1rem\",\r\n          border: \"0\"\r\n        }}\r\n      />\r\n    </span>\r\n  );\r\n}\r\n\r\nfunction Tablesearch({ columns, data }) {\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    footerGroups,\r\n    rows,\r\n    prepareRow,\r\n    page,\r\n    state,\r\n    preGlobalFilteredRows,\r\n    setGlobalFilter\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data\r\n    },\r\n    useGlobalFilter, useSortBy\r\n  );\r\n\r\n  // Render the UI for your table\r\n  return (\r\n    <table\r\n      {...getTableProps()}\r\n      border={1}\r\n      style={{ borderCollapse: \"collapse\", width: \"100%\" }}\r\n    >\r\n      <thead>\r\n        {headerGroups.map((group) => (\r\n          <tr {...group.getHeaderGroupProps()}>\r\n            {group.headers.map((column) => (\r\n              <th {...column.getHeaderProps(column.getSortByToggleProps())}>{column.render(\"Header\")}<span>{\r\n                column.isSorted\r\n                    ? column.isSortedDesc\r\n                          ? ' ?'\r\n                          : ' ?'\r\n                    : ''\r\n            }</span></th>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n        <tr>\r\n          <th\r\n            colSpan={100}\r\n            style={{\r\n              textAlign: \"left\",\r\n              padding: 10,\r\n              background: \"yellow\"\r\n            }}\r\n          >\r\n            <GlobalFilter\r\n              preGlobalFilteredRows={preGlobalFilteredRows}\r\n              globalFilter={state.globalFilter}\r\n              setGlobalFilter={setGlobalFilter}\r\n            />\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody {...getTableBodyProps()}>\r\n        {rows.map((row, i) => {\r\n          prepareRow(row);\r\n          return (\r\n            <tr {...row.getRowProps()}>\r\n              {row.cells.map((cell) => {\r\n                return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>;\r\n              })}\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n      <tfoot>\r\n        {footerGroups.map((group) => (\r\n          <tr {...group.getFooterGroupProps()}>\r\n            {group.headers.map((column) => (\r\n              <td {...column.getFooterProps()}>{column.render(\"Footer\")}</td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tfoot>\r\n    </table>\r\n  );\r\n}\r\n\r\nfunction Table() {\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Heading 1\",\r\n        Footer: \"Footer 1\",\r\n        columns: [\r\n          {\r\n            Header: \"Sub Heading 1a\",\r\n            accessor: \"firstcolumn\"\r\n          },\r\n          {\r\n            Header: \"Sub Heading 1b\",\r\n            accessor: \"secondcolumn\"\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        Header: \"Heading 2\",\r\n        Footer: \"Footer 2\",\r\n        columns: [\r\n          {\r\n            accessor: \"thirdcolumn\"\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    []\r\n  );\r\n\r\n  const data = React.useMemo(\r\n    () => [\r\n      {\r\n        firstcolumn: \"Row 1 Column 1\",\r\n        secondcolumn: \"Row 1 Column 2\",\r\n        thirdcolumn: \"Row 1 Column 3\"\r\n      },\r\n      {\r\n        firstcolumn: \"Row 2 Column 1\",\r\n        secondcolumn: \"Row 2 Column 2\",\r\n        thirdcolumn: \"Row 2 Column 3\"\r\n      },\r\n      {\r\n        firstcolumn: \"Row 3 Column 1\",\r\n        secondcolumn: \"Row 3 Column 2\",\r\n        thirdcolumn: \"Row 3 Column 3\"\r\n      },\r\n      {\r\n        firstcolumn: \"Row 4 Column 1\",\r\n        secondcolumn: \"Row 4 Column 2\",\r\n        thirdcolumn: \"Row 4 Column 3\"\r\n      },\r\n      {\r\n        firstcolumn: \"Row 5 Column 1\",\r\n        secondcolumn: \"Row 5 Column 2\",\r\n        thirdcolumn: \"Row 5 Column 3\"\r\n      },\r\n      {\r\n        firstcolumn: \"Row 6 Column 1\",\r\n        secondcolumn: \"Row 6 Column 2\",\r\n        thirdcolumn: \"Row 6 Column 3\"\r\n      },\r\n      {\r\n        firstcolumn: \"Row 7 Column 1\",\r\n        secondcolumn: \"Row 7 Column 2\",\r\n        thirdcolumn: \"Row 7 Column 3\"\r\n      },\r\n      {\r\n        firstcolumn: \"Row 8 Column 1\",\r\n        secondcolumn: \"Row 8 Column 2\",\r\n        thirdcolumn: \"Row 8 Column 3\"\r\n      },\r\n      {\r\n        firstcolumn: \"Row 9 Column 1\",\r\n        secondcolumn: \"Row 9 Column 2\",\r\n        thirdcolumn: \"Row 9 Column 3\"\r\n      },\r\n      {\r\n        firstcolumn: \"Row 10 Column 1\",\r\n        secondcolumn: \"Row 10 Column 2\",\r\n        thirdcolumn: \"Row 10 Column 3\"\r\n      },\r\n      {\r\n        firstcolumn: \"Row 11 Column 1\",\r\n        secondcolumn: \"Row 11 Column 2\",\r\n        thirdcolumn: \"Row 11 Column 3\"\r\n      },\r\n      {\r\n        firstcolumn: \"Row 12 Column 1\",\r\n        secondcolumn: \"Row 12 Column 2\",\r\n        thirdcolumn: \"Row 12 Column 3\"\r\n      }\r\n    ],\r\n    []\r\n  );\r\n\r\n  return <Tablesearch columns={columns} data={data} />;\r\n}\r\n\r\nexport default Table;\r\n"]},"metadata":{},"sourceType":"module"}