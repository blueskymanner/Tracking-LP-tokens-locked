{"ast":null,"code":"// import React, {useEffect, useState} from \"react\";\nimport getBSCWeb3 from '../utils/getBSCweb3.js';\nimport unicryptBSCabi from \"../abi/unicryptBSC_abi.json\";\nimport pancakeswapBSCabi from \"../abi/pancakeswapBSC_abi.json\";\nimport BigNumber from \"bignumber.js\";\nimport multicallBSC from \"./multicallBSC.js\";\nimport { createClient } from 'urql';\nimport Axios from \"axios\";\nconst unicryptAddressBSC = \"0xC765bddB93b0D1c1A88282BA0fa6B2d00E3e0c83\";\n\nasync function UnicryptBSC() {\n  const web3 = getBSCWeb3();\n  const unicryptBSCPortal = new web3.eth.Contract(unicryptBSCabi, unicryptAddressBSC);\n  let total_tokenNums = await unicryptBSCPortal.methods.getNumLockedTokens().call();\n  const APIURL = 'https://api.thegraph.com/subgraphs/name/pancakeswap/pairs';\n  const client = createClient({\n    url: APIURL\n  });\n  let tokenAddrs = [];\n  let tokenLocks = [];\n  let LPtokens = [];\n  let tokensQuery0 = [];\n  let tokenData0 = [];\n  let decimals0 = [];\n  let tokensQuery1 = [];\n  let tokenData1 = [];\n  let decimals1 = [];\n  let apiurl0 = [];\n  let apiurl1 = [];\n  let datainfo0 = [];\n  let datainfo1 = [];\n  let percentage = [];\n  let token0Price = [];\n  let token1Price = [];\n  let period = [];\n  let tokensinfo = [];\n\n  for (let i = 0; i < 2; i++) {\n    tokenAddrs.push({\n      address: unicryptAddressBSC,\n      name: \"getLockedTokenAtIndex\",\n      params: [total_tokenNums - i - 1]\n    });\n  }\n\n  const tokenAddrsArr = await multicallBSC(unicryptBSCabi, tokenAddrs);\n\n  for (let i = 0; i < tokenAddrsArr.length; i++) {\n    tokenLocks.push({\n      address: unicryptAddressBSC,\n      name: \"tokenLocks\",\n      params: [tokenAddrsArr[i][0], 0]\n    });\n  }\n\n  const tokenLocksArr = await multicallBSC(unicryptBSCabi, tokenLocks);\n\n  for (let i = 0; i < tokenAddrsArr.length; i++) {\n    LPtokens.push({\n      address: tokenAddrsArr[i][0],\n      name: \"token0\"\n    });\n    LPtokens.push({\n      address: tokenAddrsArr[i][0],\n      name: \"token1\"\n    });\n    LPtokens.push({\n      address: tokenAddrsArr[i][0],\n      name: \"decimals\"\n    });\n    LPtokens.push({\n      address: tokenAddrsArr[i][0],\n      name: \"getReserves\"\n    });\n    LPtokens.push({\n      address: tokenAddrsArr[i][0],\n      name: \"totalSupply\"\n    });\n  }\n\n  const LPtokensArr = await multicallBSC(pancakeswapBSCabi, LPtokens);\n\n  for (let i = 0; i < tokenAddrsArr.length; i++) {\n    apiurl0[i] = `https://api.pancakeswap.info/api/v2/tokens/${LPtokensArr[i * 5][0]}`;\n    await Axios.get(apiurl0[i]).then(entry => datainfo0.push(entry));\n    apiurl1[i] = `https://api.pancakeswap.info/api/v2/tokens/${LPtokensArr[i * 5 + 1][0]}`;\n    await Axios.get(apiurl1[i]).then(entry => datainfo1.push(entry));\n    tokensQuery0[i] = `\n    query {\n      token(id: \"${LPtokensArr[i * 5][0].toLowerCase()}\"){\n        decimals\n      }\n    }\n    `;\n    tokensQuery1[i] = `\n    query {\n      token(id: \"${LPtokensArr[i * 5 + 1][0].toLowerCase()}\"){\n        decimals\n      }\n    }\n    `;\n    tokenData0[i] = await client.query(tokensQuery0[i]).toPromise();\n    decimals0[i] = tokenData0[i].data.token.decimals;\n    tokenData1[i] = await client.query(tokensQuery1[i]).toPromise();\n    decimals1[i] = tokenData1[i].data.token.decimals;\n    percentage[i] = new BigNumber(tokenLocksArr[i][1]._hex).dividedBy(10 ** LPtokensArr[i * 5 + 2][0]).dividedBy(new BigNumber(LPtokensArr[i * 5 + 4][0]._hex).dividedBy(10 ** LPtokensArr[i * 5 + 2][0]));\n    token0Price[i] = new BigNumber(LPtokensArr[i * 5 + 3][0]._hex).dividedBy(10 ** decimals0[i]).multipliedBy(new BigNumber(datainfo0[i].data.data.price));\n    token1Price[i] = new BigNumber(LPtokensArr[i * 5 + 3][1]._hex).dividedBy(10 ** decimals1[i]).multipliedBy(new BigNumber(datainfo1[i].data.data.price));\n    period[i] = new BigNumber(tokenLocksArr[i][3]._hex).minus(new BigNumber(tokenLocksArr[i][0]._hex)).dividedBy(86400);\n    console.log(tokenLocksArr[i][3]);\n    console.log(LPtokensArr[i * 5 + 3][2]);\n    tokensinfo.push({\n      tokenName: datainfo0[i].data.data.symbol + \" / \" + datainfo1[i].data.data.symbol,\n      blockchain: \"BSC\",\n      lockedPrice: \"$\" + token0Price[i].plus(token1Price[i]).multipliedBy(percentage[i]).toFormat(0),\n      lockedAmount: new BigNumber(tokenLocksArr[i][1]._hex).dividedBy(10 ** LPtokensArr[i * 5 + 2][0]).toFormat(2) + \" (\" + percentage[i].multipliedBy(100).toFormat(1) + \"%)\",\n      unlockPeriod: period[i].toFormat(0) + \" days\",\n      locker: \"Unicrypt\",\n      marketCap: \"$\" + token0Price[i].plus(token1Price[i]).toFormat(0),\n      rank: \"â€”\",\n      score: token0Price[i].plus(token1Price[i]).multipliedBy(percentage[i]).multipliedBy(period[i]).multipliedBy(percentage[i]).toFormat(0)\n    });\n  }\n\n  return tokensinfo;\n}\n\n_c = UnicryptBSC;\nexport default UnicryptBSC;\n\nvar _c;\n\n$RefreshReg$(_c, \"UnicryptBSC\");","map":{"version":3,"sources":["D:/My Data/backup/GIT/Tracking-LP-tokens-locked/src/Table/unicryptBSC.js"],"names":["getBSCWeb3","unicryptBSCabi","pancakeswapBSCabi","BigNumber","multicallBSC","createClient","Axios","unicryptAddressBSC","UnicryptBSC","web3","unicryptBSCPortal","eth","Contract","total_tokenNums","methods","getNumLockedTokens","call","APIURL","client","url","tokenAddrs","tokenLocks","LPtokens","tokensQuery0","tokenData0","decimals0","tokensQuery1","tokenData1","decimals1","apiurl0","apiurl1","datainfo0","datainfo1","percentage","token0Price","token1Price","period","tokensinfo","i","push","address","name","params","tokenAddrsArr","length","tokenLocksArr","LPtokensArr","get","then","entry","toLowerCase","query","toPromise","data","token","decimals","_hex","dividedBy","multipliedBy","price","minus","console","log","tokenName","symbol","blockchain","lockedPrice","plus","toFormat","lockedAmount","unlockPeriod","locker","marketCap","rank","score"],"mappings":"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","sourcesContent":["// import React, {useEffect, useState} from \"react\";\r\nimport getBSCWeb3 from '../utils/getBSCweb3.js';\r\nimport unicryptBSCabi from \"../abi/unicryptBSC_abi.json\";\r\nimport pancakeswapBSCabi from \"../abi/pancakeswapBSC_abi.json\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport multicallBSC from \"./multicallBSC.js\";\r\nimport { createClient } from 'urql'\r\nimport Axios from \"axios\";\r\n\r\nconst unicryptAddressBSC = \"0xC765bddB93b0D1c1A88282BA0fa6B2d00E3e0c83\";\r\n\r\nasync function UnicryptBSC() {\r\n\r\n  const web3 = getBSCWeb3();\r\n  const unicryptBSCPortal = new web3.eth.Contract(unicryptBSCabi, unicryptAddressBSC);\r\n  let total_tokenNums = await unicryptBSCPortal.methods.getNumLockedTokens().call();\r\n\r\n  const APIURL = 'https://api.thegraph.com/subgraphs/name/pancakeswap/pairs';\r\n\r\n  const client = createClient({\r\n        url: APIURL,\r\n  });\r\n\r\n  let tokenAddrs = [];\r\n  let tokenLocks = [];\r\n  let LPtokens = [];\r\n\r\n  let tokensQuery0 = [];\r\n  let tokenData0 = [];\r\n  let decimals0 = [];\r\n  \r\n  let tokensQuery1 = [];\r\n  let tokenData1 = [];\r\n  let decimals1 = [];\r\n\r\n  let apiurl0 = [];\r\n  let apiurl1 = [];\r\n  let datainfo0 = [];\r\n  let datainfo1 = [];\r\n\r\n  let percentage = [];\r\n  let token0Price = [];\r\n  let token1Price = [];\r\n  let period = [];\r\n\r\n  let tokensinfo = [];\r\n\r\n  for (let i = 0; i < 2; i++) {\r\n    tokenAddrs.push({address: unicryptAddressBSC, name: \"getLockedTokenAtIndex\", params: [total_tokenNums-i-1]});\r\n  }\r\n  const tokenAddrsArr = await multicallBSC(unicryptBSCabi, tokenAddrs);\r\n\r\n  for (let i = 0; i < tokenAddrsArr.length; i++) {\r\n    tokenLocks.push({address: unicryptAddressBSC, name: \"tokenLocks\", params: [tokenAddrsArr[i][0], 0]});\r\n  }\r\n  const tokenLocksArr = await multicallBSC(unicryptBSCabi, tokenLocks);\r\n\r\n  for (let i = 0; i < tokenAddrsArr.length; i++) {\r\n    LPtokens.push({address: tokenAddrsArr[i][0], name: \"token0\"});\r\n    LPtokens.push({address: tokenAddrsArr[i][0], name: \"token1\"});\r\n    LPtokens.push({address: tokenAddrsArr[i][0], name: \"decimals\"});\r\n    LPtokens.push({address: tokenAddrsArr[i][0], name: \"getReserves\"});\r\n    LPtokens.push({address: tokenAddrsArr[i][0], name: \"totalSupply\"});\r\n  }\r\n  const LPtokensArr = await multicallBSC(pancakeswapBSCabi, LPtokens);\r\n\r\n  for (let i = 0; i < tokenAddrsArr.length; i++) {\r\n\r\n    apiurl0[i] = `https://api.pancakeswap.info/api/v2/tokens/${LPtokensArr[i*5][0]}`;\r\n    await Axios.get(apiurl0[i]).then(entry => \r\n      datainfo0.push(entry));\r\n  \r\n    apiurl1[i] = `https://api.pancakeswap.info/api/v2/tokens/${LPtokensArr[i*5+1][0]}`;\r\n    await Axios.get(apiurl1[i]).then(entry => \r\n      datainfo1.push(entry));\r\n\r\n    tokensQuery0[i] = `\r\n    query {\r\n      token(id: \"${LPtokensArr[i*5][0].toLowerCase()}\"){\r\n        decimals\r\n      }\r\n    }\r\n    `;\r\n    tokensQuery1[i] = `\r\n    query {\r\n      token(id: \"${LPtokensArr[i*5+1][0].toLowerCase()}\"){\r\n        decimals\r\n      }\r\n    }\r\n    `;\r\n\r\n    tokenData0[i] = await client.query(tokensQuery0[i]).toPromise();\r\n    decimals0[i] = tokenData0[i].data.token.decimals;\r\n\r\n    tokenData1[i] = await client.query(tokensQuery1[i]).toPromise();\r\n    decimals1[i] = tokenData1[i].data.token.decimals;\r\n\r\n    percentage[i] = new BigNumber(tokenLocksArr[i][1]._hex).dividedBy(10**LPtokensArr[i*5+2][0]).dividedBy(new BigNumber(LPtokensArr[i*5+4][0]._hex).dividedBy(10**LPtokensArr[i*5+2][0]));\r\n    token0Price[i] = new BigNumber(LPtokensArr[i*5+3][0]._hex).dividedBy(10**decimals0[i]).multipliedBy(new BigNumber(datainfo0[i].data.data.price));\r\n    token1Price[i] = new BigNumber(LPtokensArr[i*5+3][1]._hex).dividedBy(10**decimals1[i]).multipliedBy(new BigNumber(datainfo1[i].data.data.price));\r\n    period[i] = new BigNumber(tokenLocksArr[i][3]._hex).minus(new BigNumber(tokenLocksArr[i][0]._hex)).dividedBy(86400);\r\n    console.log(tokenLocksArr[i][3]);\r\n    console.log(LPtokensArr[i*5+3][2]);\r\n\r\n    tokensinfo.push({ tokenName : datainfo0[i].data.data.symbol + \" / \" + datainfo1[i].data.data.symbol, \r\n                      blockchain: \"BSC\",\r\n                      lockedPrice: \"$\" + token0Price[i].plus(token1Price[i]).multipliedBy(percentage[i]).toFormat(0), \r\n                      lockedAmount: new BigNumber(tokenLocksArr[i][1]._hex).dividedBy(10**LPtokensArr[i*5+2][0]).toFormat(2) + \" (\" + percentage[i].multipliedBy(100).toFormat(1) + \"%)\", \r\n                      unlockPeriod: period[i].toFormat(0) + \" days\", \r\n                      locker: \"Unicrypt\", \r\n                      marketCap: \"$\" + token0Price[i].plus(token1Price[i]).toFormat(0), \r\n                      rank: \"â€”\", \r\n                      score: token0Price[i].plus(token1Price[i]).multipliedBy(percentage[i]).multipliedBy(period[i]).multipliedBy(percentage[i]).toFormat(0) });\r\n  }\r\n\r\n  return tokensinfo;\r\n}\r\n\r\nexport default UnicryptBSC;\r\n"]},"metadata":{},"sourceType":"module"}