{"ast":null,"code":"// import React, {useEffect, useState} from \"react\";\nimport getETHWeb3 from '../utils/getETHweb3.js';\nimport unicryptETHabi from \"../abi/unicryptETH_abi.json\";\nimport uniswapETHabi from \"../abi/uniswapETH_abi.json\";\nimport BigNumber from \"bignumber.js\";\nimport multicallETH from \"./multicallETH.js\";\nimport { createClient } from 'urql';\nimport Axios from \"axios\";\nconst unicryptAddressETH = \"0x663A5C229c09b049E36dCc11a9B0d4a8Eb9db214\";\n\nasync function UnicryptETH() {\n  // let provider = ethers.getDefaultProvider();\n  // const unicryptETHPortal = new ethers.Contract(unicryptAddressETH, unicryptETHabi, provider);\n  // let total_tokenNums = await unicryptETHPortal.getNumLockedTokens();\n  const web3 = getETHWeb3();\n  const unicryptETHPortal = new web3.eth.Contract(unicryptETHabi, unicryptAddressETH);\n  let total_tokenNums = await unicryptETHPortal.methods.getNumLockedTokens().call(); //   // let apiurl = `https://api.coingecko.com/api/v3/coins/ethereum/contract/${token1Addr}`;\n  //   // const { data: datainfo } = await Axios.get(apiurl);\n  //   // console.log(datainfo.market_data.current_price.usd);\n\n  let datainfo111 = [];\n  let apiurl111 = 'https://api.coingecko.com/api/v3/coins/binance-smart-chain/contract/0xD4d03e510b382244B2289637B5f7D9067bcAaE85';\n  await Axios.get(apiurl111).then(entry => {\n    datainfo111.push(entry);\n    console.log(datainfo111);\n  });\n  const APIURL = 'https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v2';\n  const ethpriceQuery = `\n      query {\n        bundle(id: \"1\" ) {\n          ethPrice\n        }\n      }\n    `;\n  const client = createClient({\n    url: APIURL\n  });\n  const ethData = await client.query(ethpriceQuery).toPromise();\n  let ethPrice = ethData.data.bundle.ethPrice;\n  let tokenAddrs = [];\n  let tokenLocks = [];\n  let LPtokens = [];\n  let tokensQuery0 = [];\n  let tokenData0 = [];\n  let decimals0 = [];\n  let token0Symbol = [];\n  let token0DerivedETH = [];\n  let tokensQuery1 = [];\n  let tokenData1 = [];\n  let decimals1 = [];\n  let token1Symbol = [];\n  let token1DerivedETH = [];\n  let percentage = [];\n  let token0Price = [];\n  let token1Price = [];\n  let period = [];\n  let tokensinfo = [];\n\n  for (let i = 0; i < 2; i++) {\n    tokenAddrs.push({\n      address: unicryptAddressETH,\n      name: \"getLockedTokenAtIndex\",\n      params: [total_tokenNums - i - 1]\n    });\n  }\n\n  const tokenAddrsArr = await multicallETH(unicryptETHabi, tokenAddrs);\n\n  for (let i = 0; i < tokenAddrsArr.length; i++) {\n    tokenLocks.push({\n      address: unicryptAddressETH,\n      name: \"tokenLocks\",\n      params: [tokenAddrsArr[i][0], 0]\n    });\n  }\n\n  const tokenLocksArr = await multicallETH(unicryptETHabi, tokenLocks);\n\n  for (let i = 0; i < tokenAddrsArr.length; i++) {\n    LPtokens.push({\n      address: tokenAddrsArr[i][0],\n      name: \"token0\"\n    });\n    LPtokens.push({\n      address: tokenAddrsArr[i][0],\n      name: \"token1\"\n    });\n    LPtokens.push({\n      address: tokenAddrsArr[i][0],\n      name: \"decimals\"\n    });\n    LPtokens.push({\n      address: tokenAddrsArr[i][0],\n      name: \"getReserves\"\n    });\n    LPtokens.push({\n      address: tokenAddrsArr[i][0],\n      name: \"totalSupply\"\n    });\n  }\n\n  const LPtokensArr = await multicallETH(uniswapETHabi, LPtokens);\n\n  for (let i = 0; i < tokenAddrsArr.length; i++) {\n    tokensQuery0[i] = `\n      query {\n        token(id: \"${LPtokensArr[i * 5][0].toLowerCase()}\"){\n          symbol\n          decimals\n          derivedETH\n        }\n      }\n    `;\n    tokensQuery1[i] = `\n      query {\n        token(id: \"${LPtokensArr[i * 5 + 1][0].toLowerCase()}\"){\n          symbol\n          decimals\n          derivedETH\n        }\n      }\n    `;\n    tokenData0[i] = await client.query(tokensQuery0[i]).toPromise();\n    decimals0[i] = tokenData0[i].data.token.decimals;\n    token0Symbol[i] = tokenData0[i].data.token.symbol;\n    token0DerivedETH[i] = tokenData0[i].data.token.derivedETH;\n    tokenData1[i] = await client.query(tokensQuery1[i]).toPromise();\n    decimals1[i] = tokenData1[i].data.token.decimals;\n    token1Symbol[i] = tokenData1[i].data.token.symbol;\n    token1DerivedETH[i] = tokenData1[i].data.token.derivedETH;\n    percentage[i] = new BigNumber(tokenLocksArr[i][1]._hex).dividedBy(10 ** LPtokensArr[i * 5 + 2][0]).dividedBy(new BigNumber(LPtokensArr[i * 5 + 4][0]._hex).dividedBy(10 ** LPtokensArr[i * 5 + 2][0]));\n    token0Price[i] = new BigNumber(LPtokensArr[i * 5 + 3][0]._hex).dividedBy(10 ** decimals0[i]).multipliedBy(new BigNumber(token0DerivedETH[i])).multipliedBy(ethPrice);\n    token1Price[i] = new BigNumber(LPtokensArr[i * 5 + 3][1]._hex).dividedBy(10 ** decimals1[i]).multipliedBy(new BigNumber(token1DerivedETH[i])).multipliedBy(ethPrice);\n    period[i] = new BigNumber(tokenLocksArr[i][3]._hex).minus(LPtokensArr[i * 5 + 3][2]).dividedBy(86400);\n    tokensinfo.push({\n      tokenName: token0Symbol[i] + \" / \" + token1Symbol[i],\n      blockchain: \"Ethereum\",\n      lockedPrice: \"$\" + token0Price[i].plus(token1Price[i]).multipliedBy(percentage[i]).toFormat(0),\n      lockedAmount: new BigNumber(tokenLocksArr[i][1]._hex).dividedBy(10 ** LPtokensArr[i * 5 + 2][0]).toFormat(2) + \" (\" + percentage[i].multipliedBy(100).toFormat(1) + \"%)\",\n      unlockPeriod: period[i].toFormat(0) + \" days left\",\n      locker: \"Unicrypt\",\n      marketCap: \"$\" + token0Price[i].plus(token1Price[i]).toFormat(0),\n      rank: \"â€”\",\n      score: token0Price[i].plus(token1Price[i]).multipliedBy(percentage[i]).multipliedBy(period[i]).multipliedBy(percentage[i]).toFormat(0)\n    });\n  }\n\n  return tokensinfo;\n}\n\n_c = UnicryptETH;\nexport default UnicryptETH;\n\nvar _c;\n\n$RefreshReg$(_c, \"UnicryptETH\");","map":{"version":3,"sources":["D:/My Data/backup/GIT/Tracking-LP-tokens-locked/src/Table/unicryptETH.js"],"names":["getETHWeb3","unicryptETHabi","uniswapETHabi","BigNumber","multicallETH","createClient","Axios","unicryptAddressETH","UnicryptETH","web3","unicryptETHPortal","eth","Contract","total_tokenNums","methods","getNumLockedTokens","call","datainfo111","apiurl111","get","then","entry","push","console","log","APIURL","ethpriceQuery","client","url","ethData","query","toPromise","ethPrice","data","bundle","tokenAddrs","tokenLocks","LPtokens","tokensQuery0","tokenData0","decimals0","token0Symbol","token0DerivedETH","tokensQuery1","tokenData1","decimals1","token1Symbol","token1DerivedETH","percentage","token0Price","token1Price","period","tokensinfo","i","address","name","params","tokenAddrsArr","length","tokenLocksArr","LPtokensArr","toLowerCase","token","decimals","symbol","derivedETH","_hex","dividedBy","multipliedBy","minus","tokenName","blockchain","lockedPrice","plus","toFormat","lockedAmount","unlockPeriod","locker","marketCap","rank","score"],"mappings":"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","sourcesContent":["// import React, {useEffect, useState} from \"react\";\r\nimport getETHWeb3 from '../utils/getETHweb3.js';\r\nimport unicryptETHabi from \"../abi/unicryptETH_abi.json\";\r\nimport uniswapETHabi from \"../abi/uniswapETH_abi.json\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport multicallETH from \"./multicallETH.js\";\r\nimport { createClient } from 'urql'\r\nimport Axios from \"axios\";\r\n\r\nconst unicryptAddressETH = \"0x663A5C229c09b049E36dCc11a9B0d4a8Eb9db214\";\r\n\r\nasync function UnicryptETH() {\r\n\r\n  // let provider = ethers.getDefaultProvider();\r\n  // const unicryptETHPortal = new ethers.Contract(unicryptAddressETH, unicryptETHabi, provider);\r\n  // let total_tokenNums = await unicryptETHPortal.getNumLockedTokens();\r\n\r\n  const web3 = getETHWeb3();\r\n  const unicryptETHPortal = new web3.eth.Contract(unicryptETHabi, unicryptAddressETH);\r\n  let total_tokenNums = await unicryptETHPortal.methods.getNumLockedTokens().call();\r\n\r\n  //   // let apiurl = `https://api.coingecko.com/api/v3/coins/ethereum/contract/${token1Addr}`;\r\n  //   // const { data: datainfo } = await Axios.get(apiurl);\r\n  //   // console.log(datainfo.market_data.current_price.usd);\r\nlet datainfo111 = [];\r\n    let apiurl111 = 'https://api.coingecko.com/api/v3/coins/binance-smart-chain/contract/0xD4d03e510b382244B2289637B5f7D9067bcAaE85';\r\n    await Axios.get(apiurl111).then((entry) => { \r\n          datainfo111.push(entry);\r\n    console.log(datainfo111);\r\n    });\r\n  const APIURL = 'https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v2';\r\n  const ethpriceQuery = `\r\n      query {\r\n        bundle(id: \"1\" ) {\r\n          ethPrice\r\n        }\r\n      }\r\n    `;\r\n\r\n  const client = createClient({\r\n    url: APIURL,\r\n  });\r\n  const ethData = await client.query(ethpriceQuery).toPromise();\r\n  let ethPrice = ethData.data.bundle.ethPrice;\r\n\r\n  let tokenAddrs = [];\r\n  let tokenLocks = [];\r\n  let LPtokens = [];\r\n\r\n  let tokensQuery0 = [];\r\n  let tokenData0 = [];\r\n  let decimals0 = [];\r\n  let token0Symbol = [];\r\n  let token0DerivedETH = [];\r\n  \r\n  let tokensQuery1 = [];\r\n  let tokenData1 = [];\r\n  let decimals1 = [];\r\n  let token1Symbol = [];\r\n  let token1DerivedETH = [];\r\n\r\n  let percentage = [];\r\n  let token0Price = [];\r\n  let token1Price = [];\r\n  let period = [];\r\n\r\n  let tokensinfo = [];\r\n\r\n  for (let i = 0; i < 2; i++) {\r\n    tokenAddrs.push({address: unicryptAddressETH, name: \"getLockedTokenAtIndex\", params: [total_tokenNums-i-1]});\r\n  }\r\n  const tokenAddrsArr = await multicallETH(unicryptETHabi, tokenAddrs);\r\n\r\n  for (let i = 0; i < tokenAddrsArr.length; i++) {\r\n    tokenLocks.push({address: unicryptAddressETH, name: \"tokenLocks\", params: [tokenAddrsArr[i][0], 0]});\r\n  }\r\n  const tokenLocksArr = await multicallETH(unicryptETHabi, tokenLocks);\r\n\r\n  for (let i = 0; i < tokenAddrsArr.length; i++) {\r\n    LPtokens.push({address: tokenAddrsArr[i][0], name: \"token0\"});\r\n    LPtokens.push({address: tokenAddrsArr[i][0], name: \"token1\"});\r\n    LPtokens.push({address: tokenAddrsArr[i][0], name: \"decimals\"});\r\n    LPtokens.push({address: tokenAddrsArr[i][0], name: \"getReserves\"});\r\n    LPtokens.push({address: tokenAddrsArr[i][0], name: \"totalSupply\"});\r\n  }\r\n  const LPtokensArr = await multicallETH(uniswapETHabi, LPtokens);\r\n\r\n  for (let i = 0; i < tokenAddrsArr.length; i++) {\r\n    tokensQuery0[i] = `\r\n      query {\r\n        token(id: \"${LPtokensArr[i*5][0].toLowerCase()}\"){\r\n          symbol\r\n          decimals\r\n          derivedETH\r\n        }\r\n      }\r\n    `;\r\n\r\n    tokensQuery1[i] = `\r\n      query {\r\n        token(id: \"${LPtokensArr[i*5+1][0].toLowerCase()}\"){\r\n          symbol\r\n          decimals\r\n          derivedETH\r\n        }\r\n      }\r\n    `;\r\n\r\n    tokenData0[i] = await client.query(tokensQuery0[i]).toPromise();\r\n    decimals0[i] = tokenData0[i].data.token.decimals;\r\n    token0Symbol[i] = tokenData0[i].data.token.symbol;\r\n    token0DerivedETH[i] = tokenData0[i].data.token.derivedETH;\r\n\r\n    tokenData1[i] = await client.query(tokensQuery1[i]).toPromise();\r\n    decimals1[i] = tokenData1[i].data.token.decimals;\r\n    token1Symbol[i] = tokenData1[i].data.token.symbol;\r\n    token1DerivedETH[i] = tokenData1[i].data.token.derivedETH;\r\n\r\n    percentage[i] = new BigNumber(tokenLocksArr[i][1]._hex).dividedBy(10**LPtokensArr[i*5+2][0]).dividedBy(new BigNumber(LPtokensArr[i*5+4][0]._hex).dividedBy(10**LPtokensArr[i*5+2][0]));\r\n    token0Price[i] = new BigNumber(LPtokensArr[i*5+3][0]._hex).dividedBy(10**decimals0[i]).multipliedBy(new BigNumber(token0DerivedETH[i])).multipliedBy(ethPrice);\r\n    token1Price[i] = new BigNumber(LPtokensArr[i*5+3][1]._hex).dividedBy(10**decimals1[i]).multipliedBy(new BigNumber(token1DerivedETH[i])).multipliedBy(ethPrice);\r\n    period[i] = new BigNumber(tokenLocksArr[i][3]._hex).minus(LPtokensArr[i*5+3][2]).dividedBy(86400);\r\n\r\n    tokensinfo.push({ tokenName: token0Symbol[i] + \" / \" + token1Symbol[i], \r\n                      blockchain: \"Ethereum\",\r\n                      lockedPrice: \"$\" + token0Price[i].plus(token1Price[i]).multipliedBy(percentage[i]).toFormat(0), \r\n                      lockedAmount: new BigNumber(tokenLocksArr[i][1]._hex).dividedBy(10**LPtokensArr[i*5+2][0]).toFormat(2) + \" (\" + percentage[i].multipliedBy(100).toFormat(1) + \"%)\", \r\n                      unlockPeriod: period[i].toFormat(0) + \" days left\", \r\n                      locker: \"Unicrypt\", \r\n                      marketCap: \"$\" + token0Price[i].plus(token1Price[i]).toFormat(0), \r\n                      rank: \"â€”\", \r\n                      score: token0Price[i].plus(token1Price[i]).multipliedBy(percentage[i]).multipliedBy(period[i]).multipliedBy(percentage[i]).toFormat(0) });\r\n  }\r\n\r\n  return tokensinfo;\r\n}\r\n\r\nexport default UnicryptETH;\r\n"]},"metadata":{},"sourceType":"module"}