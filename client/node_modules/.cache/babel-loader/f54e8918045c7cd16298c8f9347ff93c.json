{"ast":null,"code":"// import React, {useEffect, useState} from \"react\";\nimport getBSCWeb3 from '../utils/getBSCweb3.js';\nimport deepLockerabi from \"../abi/deepLocker_abi.json\";\nimport pancakeswapBSCabi from \"../abi/pancakeswapBSC_abi.json\";\nimport BigNumber from \"bignumber.js\";\nimport multicallBSC from \"./multicallBSC.js\";\nimport { createClient } from 'urql';\nimport Axios from \"axios\";\nconst deepLockerAddr = \"0x3f4D6bf08CB7A003488Ef082102C2e6418a4551e\";\n\nasync function DeepLocker() {\n  const web3 = getBSCWeb3();\n  const deepLockerPortal = new web3.eth.Contract(deepLockerabi, deepLockerAddr);\n  let total_tokenNums = await deepLockerPortal.methods.depositId().call();\n  console.log(total_tokenNums);\n  const APIURL = 'https://api.thegraph.com/subgraphs/name/pancakeswap/pairs';\n  const client = createClient({\n    url: APIURL\n  });\n  let tokenAddrs = [];\n  let tokenLocks = [];\n  let LPtokens = [];\n  let tokensQuery0 = [];\n  let tokenData0 = [];\n  let decimals0 = [];\n  let tokensQuery1 = [];\n  let tokenData1 = [];\n  let decimals1 = [];\n  let apiurl0 = [];\n  let apiurl1 = [];\n  let datainfo0 = [];\n  let datainfo1 = [];\n  let percentage = [];\n  let token0Price = [];\n  let token1Price = [];\n  let period = [];\n  let tokensinfo = [];\n\n  for (let i = 0; i < 2; i++) {\n    tokenLocks.push({\n      address: deepLockerAddr,\n      name: \"lockedToken\",\n      params: [total_tokenNums - i]\n    });\n  }\n\n  const tokenLocksArr = await multicallBSC(deepLockerabi, tokenLocks);\n  console.log(tokenLocksArr[0][1]);\n\n  for (let i = 0; i < tokenAddrsArr.length; i++) {\n    LPtokens.push({\n      address: tokenAddrsArr[i][0],\n      name: \"token0\"\n    });\n    LPtokens.push({\n      address: tokenAddrsArr[i][0],\n      name: \"token1\"\n    });\n    LPtokens.push({\n      address: tokenAddrsArr[i][0],\n      name: \"decimals\"\n    });\n    LPtokens.push({\n      address: tokenAddrsArr[i][0],\n      name: \"getReserves\"\n    });\n    LPtokens.push({\n      address: tokenAddrsArr[i][0],\n      name: \"totalSupply\"\n    });\n  }\n}\n\n_c = DeepLocker;\nexport default DeepLocker;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeepLocker\");","map":{"version":3,"sources":["D:/My Data/backup/GIT/Tracking-LP-tokens-locked/src/Table/deepLocker.js"],"names":["getBSCWeb3","deepLockerabi","pancakeswapBSCabi","BigNumber","multicallBSC","createClient","Axios","deepLockerAddr","DeepLocker","web3","deepLockerPortal","eth","Contract","total_tokenNums","methods","depositId","call","console","log","APIURL","client","url","tokenAddrs","tokenLocks","LPtokens","tokensQuery0","tokenData0","decimals0","tokensQuery1","tokenData1","decimals1","apiurl0","apiurl1","datainfo0","datainfo1","percentage","token0Price","token1Price","period","tokensinfo","i","push","address","name","params","tokenLocksArr","tokenAddrsArr","length"],"mappings":"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","sourcesContent":["// import React, {useEffect, useState} from \"react\";\r\nimport getBSCWeb3 from '../utils/getBSCweb3.js';\r\nimport deepLockerabi from \"../abi/deepLocker_abi.json\";\r\nimport pancakeswapBSCabi from \"../abi/pancakeswapBSC_abi.json\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport multicallBSC from \"./multicallBSC.js\";\r\nimport { createClient } from 'urql'\r\nimport Axios from \"axios\";\r\n\r\nconst deepLockerAddr = \"0x3f4D6bf08CB7A003488Ef082102C2e6418a4551e\";\r\n\r\nasync function DeepLocker() {\r\n\r\n  const web3 = getBSCWeb3();\r\n  const deepLockerPortal = new web3.eth.Contract(deepLockerabi, deepLockerAddr);\r\n  let total_tokenNums = await deepLockerPortal.methods.depositId().call();\r\n    console.log(total_tokenNums);\r\n\r\n  const APIURL = 'https://api.thegraph.com/subgraphs/name/pancakeswap/pairs';\r\n\r\n  const client = createClient({\r\n        url: APIURL,\r\n  });\r\n\r\n\r\n  let tokenAddrs = [];\r\n  let tokenLocks = [];\r\n  let LPtokens = [];\r\n\r\n  let tokensQuery0 = [];\r\n  let tokenData0 = [];\r\n  let decimals0 = [];\r\n  \r\n  let tokensQuery1 = [];\r\n  let tokenData1 = [];\r\n  let decimals1 = [];\r\n\r\n  let apiurl0 = [];\r\n  let apiurl1 = [];\r\n  let datainfo0 = [];\r\n  let datainfo1 = [];\r\n\r\n  let percentage = [];\r\n  let token0Price = [];\r\n  let token1Price = [];\r\n  let period = [];\r\n\r\n  let tokensinfo = [];\r\n\r\n\r\n    for (let i = 0; i < 2; i++) {\r\n    tokenLocks.push({address: deepLockerAddr, name: \"lockedToken\", params: [total_tokenNums-i]});\r\n    }\r\n  const tokenLocksArr = await multicallBSC(deepLockerabi, tokenLocks);\r\n    console.log(tokenLocksArr[0][1]);\r\n\r\n    for (let i = 0; i < tokenAddrsArr.length; i++) {\r\n        LPtokens.push({address: tokenAddrsArr[i][0], name: \"token0\"});\r\n        LPtokens.push({address: tokenAddrsArr[i][0], name: \"token1\"});\r\n        LPtokens.push({address: tokenAddrsArr[i][0], name: \"decimals\"});\r\n        LPtokens.push({address: tokenAddrsArr[i][0], name: \"getReserves\"});\r\n        LPtokens.push({address: tokenAddrsArr[i][0], name: \"totalSupply\"});\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n}\r\n\r\nexport default DeepLocker;\r\n"]},"metadata":{},"sourceType":"module"}