{"ast":null,"code":"var _jsxFileName = \"E:\\\\sample\\\\track_locked_projects\\\\react_table\\\\src\\\\Table\\\\index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport { useTable, useGlobalFilter, useAsyncDebounce, useSortBy } from \"react-table\"; // function GlobalFilter({\n//   preGlobalFilteredRows,\n//   globalFilter,\n//   setGlobalFilter\n// }) {\n//   const count = preGlobalFilteredRows.length;\n//   const [value, setValue] = React.useState(globalFilter);\n//   const onChange = useAsyncDebounce((value) => {\n//     setGlobalFilter(value || undefined);\n//   }, 200);\n//   return (\n//     <span>\n//       Search:{\" \"}\n//       <input\n//         value={value || \"\"}\n//         onChange={(e) => {\n//           setValue(e.target.value);\n//           onChange(e.target.value);\n//         }}\n//         placeholder={`${count} records...`}\n//         style={{\n//           fontSize: \"1.1rem\",\n//           border: \"0\"\n//         }}\n//       />\n//     </span>\n//   );\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Tablesearch(_ref) {\n  _s();\n\n  let {\n    columns,\n    data\n  } = _ref;\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    footerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }, useSortBy); // Render the UI for your table\n\n  return /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n    border: 1,\n    style: {\n      borderCollapse: \"collapse\",\n      width: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: [headerGroups.map(group => /*#__PURE__*/_jsxDEV(\"tr\", { ...group.getHeaderGroupProps(),\n        children: group.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n          children: [column.render(\"Header\"), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: column.isSorted ? column.isSortedDesc ? ' ?' : ' ?' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 73\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"th\", {\n          colSpan: 100,\n          style: {\n            textAlign: \"left\",\n            padding: 10,\n            background: \"yellow\"\n          },\n          children: /*#__PURE__*/_jsxDEV(GlobalFilter, {\n            preGlobalFilteredRows: preGlobalFilteredRows,\n            globalFilter: state.globalFilter,\n            setGlobalFilter: setGlobalFilter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n      children: rows.map((row, i) => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n          children: row.cells.map(cell => {\n            return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n              children: cell.render(\"Cell\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 24\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n      children: footerGroups.map(group => /*#__PURE__*/_jsxDEV(\"tr\", { ...group.getFooterGroupProps(),\n        children: group.headers.map(column => /*#__PURE__*/_jsxDEV(\"td\", { ...column.getFooterProps(),\n          children: column.render(\"Footer\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Tablesearch, \"964JxlPWDRoecDxk/QFlpa3827w=\", false, function () {\n  return [useTable];\n});\n\n_c = Tablesearch;\n\nfunction Table() {\n  _s2();\n\n  const columns = React.useMemo(() => [{\n    Header: \"Heading 1\",\n    Footer: \"Footer 1\",\n    columns: [{\n      Header: \"Sub Heading 1a\",\n      accessor: \"firstcolumn\"\n    }, {\n      Header: \"Sub Heading 1b\",\n      accessor: \"secondcolumn\"\n    }]\n  }, {\n    Header: \"Heading 2\",\n    Footer: \"Footer 2\",\n    columns: [{\n      accessor: \"thirdcolumn\"\n    }]\n  }], []);\n  const data = React.useMemo(() => [{\n    firstcolumn: \"Row 1 Column 1\",\n    secondcolumn: \"Row 1 Column 2\",\n    thirdcolumn: \"Row 1 Column 3\"\n  }, {\n    firstcolumn: \"Row 2 Column 1\",\n    secondcolumn: \"Row 2 Column 2\",\n    thirdcolumn: \"Row 2 Column 3\"\n  }, {\n    firstcolumn: \"Row 3 Column 1\",\n    secondcolumn: \"Row 3 Column 2\",\n    thirdcolumn: \"Row 3 Column 3\"\n  }, {\n    firstcolumn: \"Row 4 Column 1\",\n    secondcolumn: \"Row 4 Column 2\",\n    thirdcolumn: \"Row 4 Column 3\"\n  }, {\n    firstcolumn: \"Row 5 Column 1\",\n    secondcolumn: \"Row 5 Column 2\",\n    thirdcolumn: \"Row 5 Column 3\"\n  }, {\n    firstcolumn: \"Row 6 Column 1\",\n    secondcolumn: \"Row 6 Column 2\",\n    thirdcolumn: \"Row 6 Column 3\"\n  }, {\n    firstcolumn: \"Row 7 Column 1\",\n    secondcolumn: \"Row 7 Column 2\",\n    thirdcolumn: \"Row 7 Column 3\"\n  }, {\n    firstcolumn: \"Row 8 Column 1\",\n    secondcolumn: \"Row 8 Column 2\",\n    thirdcolumn: \"Row 8 Column 3\"\n  }, {\n    firstcolumn: \"Row 9 Column 1\",\n    secondcolumn: \"Row 9 Column 2\",\n    thirdcolumn: \"Row 9 Column 3\"\n  }, {\n    firstcolumn: \"Row 10 Column 1\",\n    secondcolumn: \"Row 10 Column 2\",\n    thirdcolumn: \"Row 10 Column 3\"\n  }, {\n    firstcolumn: \"Row 11 Column 1\",\n    secondcolumn: \"Row 11 Column 2\",\n    thirdcolumn: \"Row 11 Column 3\"\n  }, {\n    firstcolumn: \"Row 12 Column 1\",\n    secondcolumn: \"Row 12 Column 2\",\n    thirdcolumn: \"Row 12 Column 3\"\n  }], []);\n  return /*#__PURE__*/_jsxDEV(Tablesearch, {\n    columns: columns,\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 10\n  }, this);\n}\n\n_s2(Table, \"7zObr1GywQUmP9L3sfy/4IDluAk=\");\n\n_c2 = Table;\nexport default Table;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Tablesearch\");\n$RefreshReg$(_c2, \"Table\");","map":{"version":3,"sources":["E:/sample/track_locked_projects/react_table/src/Table/index.js"],"names":["React","useTable","useGlobalFilter","useAsyncDebounce","useSortBy","Tablesearch","columns","data","getTableProps","getTableBodyProps","headerGroups","footerGroups","rows","prepareRow","borderCollapse","width","map","group","getHeaderGroupProps","headers","column","getHeaderProps","render","isSorted","isSortedDesc","textAlign","padding","background","preGlobalFilteredRows","state","globalFilter","setGlobalFilter","row","i","getRowProps","cells","cell","getCellProps","getFooterGroupProps","getFooterProps","Table","useMemo","Header","Footer","accessor","firstcolumn","secondcolumn","thirdcolumn"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useTable, useGlobalFilter, useAsyncDebounce, useSortBy } from \"react-table\";\r\n\r\n// function GlobalFilter({\r\n//   preGlobalFilteredRows,\r\n//   globalFilter,\r\n//   setGlobalFilter\r\n// }) {\r\n//   const count = preGlobalFilteredRows.length;\r\n//   const [value, setValue] = React.useState(globalFilter);\r\n//   const onChange = useAsyncDebounce((value) => {\r\n//     setGlobalFilter(value || undefined);\r\n//   }, 200);\r\n\r\n//   return (\r\n//     <span>\r\n//       Search:{\" \"}\r\n//       <input\r\n//         value={value || \"\"}\r\n//         onChange={(e) => {\r\n//           setValue(e.target.value);\r\n//           onChange(e.target.value);\r\n//         }}\r\n//         placeholder={`${count} records...`}\r\n//         style={{\r\n//           fontSize: \"1.1rem\",\r\n//           border: \"0\"\r\n//         }}\r\n//       />\r\n//     </span>\r\n//   );\r\n// }\r\n\r\nfunction Tablesearch({ columns, data }) {\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    footerGroups,\r\n    rows,\r\n    prepareRow\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data\r\n    },\r\n    useSortBy\r\n  );\r\n\r\n  // Render the UI for your table\r\n  return (\r\n    <table\r\n      {...getTableProps()}\r\n      border={1}\r\n      style={{ borderCollapse: \"collapse\", width: \"100%\" }}\r\n    >\r\n      <thead>\r\n        {headerGroups.map((group) => (\r\n          <tr {...group.getHeaderGroupProps()}>\r\n            {group.headers.map((column) => (\r\n              <th {...column.getHeaderProps()}>{column.render(\"Header\")}<span>{\r\n                column.isSorted\r\n                    ? column.isSortedDesc\r\n                          ? ' ?'\r\n                          : ' ?'\r\n                    : ''\r\n            }</span></th>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n        <tr>\r\n          <th\r\n            colSpan={100}\r\n            style={{\r\n              textAlign: \"left\",\r\n              padding: 10,\r\n              background: \"yellow\"\r\n            }}\r\n          >\r\n            <GlobalFilter\r\n              preGlobalFilteredRows={preGlobalFilteredRows}\r\n              globalFilter={state.globalFilter}\r\n              setGlobalFilter={setGlobalFilter}\r\n            />\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody {...getTableBodyProps()}>\r\n        {rows.map((row, i) => {\r\n          prepareRow(row);\r\n          return (\r\n            <tr {...row.getRowProps()}>\r\n              {row.cells.map((cell) => {\r\n                return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>;\r\n              })}\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n      <tfoot>\r\n        {footerGroups.map((group) => (\r\n          <tr {...group.getFooterGroupProps()}>\r\n            {group.headers.map((column) => (\r\n              <td {...column.getFooterProps()}>{column.render(\"Footer\")}</td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tfoot>\r\n    </table>\r\n  );\r\n}\r\n\r\nfunction Table() {\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Heading 1\",\r\n        Footer: \"Footer 1\",\r\n        columns: [\r\n          {\r\n            Header: \"Sub Heading 1a\",\r\n            accessor: \"firstcolumn\"\r\n          },\r\n          {\r\n            Header: \"Sub Heading 1b\",\r\n            accessor: \"secondcolumn\"\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        Header: \"Heading 2\",\r\n        Footer: \"Footer 2\",\r\n        columns: [\r\n          {\r\n            accessor: \"thirdcolumn\"\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    []\r\n  );\r\n\r\n  const data = React.useMemo(\r\n    () => [\r\n      {\r\n        firstcolumn: \"Row 1 Column 1\",\r\n        secondcolumn: \"Row 1 Column 2\",\r\n        thirdcolumn: \"Row 1 Column 3\"\r\n      },\r\n      {\r\n        firstcolumn: \"Row 2 Column 1\",\r\n        secondcolumn: \"Row 2 Column 2\",\r\n        thirdcolumn: \"Row 2 Column 3\"\r\n      },\r\n      {\r\n        firstcolumn: \"Row 3 Column 1\",\r\n        secondcolumn: \"Row 3 Column 2\",\r\n        thirdcolumn: \"Row 3 Column 3\"\r\n      },\r\n      {\r\n        firstcolumn: \"Row 4 Column 1\",\r\n        secondcolumn: \"Row 4 Column 2\",\r\n        thirdcolumn: \"Row 4 Column 3\"\r\n      },\r\n      {\r\n        firstcolumn: \"Row 5 Column 1\",\r\n        secondcolumn: \"Row 5 Column 2\",\r\n        thirdcolumn: \"Row 5 Column 3\"\r\n      },\r\n      {\r\n        firstcolumn: \"Row 6 Column 1\",\r\n        secondcolumn: \"Row 6 Column 2\",\r\n        thirdcolumn: \"Row 6 Column 3\"\r\n      },\r\n      {\r\n        firstcolumn: \"Row 7 Column 1\",\r\n        secondcolumn: \"Row 7 Column 2\",\r\n        thirdcolumn: \"Row 7 Column 3\"\r\n      },\r\n      {\r\n        firstcolumn: \"Row 8 Column 1\",\r\n        secondcolumn: \"Row 8 Column 2\",\r\n        thirdcolumn: \"Row 8 Column 3\"\r\n      },\r\n      {\r\n        firstcolumn: \"Row 9 Column 1\",\r\n        secondcolumn: \"Row 9 Column 2\",\r\n        thirdcolumn: \"Row 9 Column 3\"\r\n      },\r\n      {\r\n        firstcolumn: \"Row 10 Column 1\",\r\n        secondcolumn: \"Row 10 Column 2\",\r\n        thirdcolumn: \"Row 10 Column 3\"\r\n      },\r\n      {\r\n        firstcolumn: \"Row 11 Column 1\",\r\n        secondcolumn: \"Row 11 Column 2\",\r\n        thirdcolumn: \"Row 11 Column 3\"\r\n      },\r\n      {\r\n        firstcolumn: \"Row 12 Column 1\",\r\n        secondcolumn: \"Row 12 Column 2\",\r\n        thirdcolumn: \"Row 12 Column 3\"\r\n      }\r\n    ],\r\n    []\r\n  );\r\n\r\n  return <Tablesearch columns={columns} data={data} />;\r\n}\r\n\r\nexport default Table;\r\n"]},"metadata":{},"sourceType":"module"}