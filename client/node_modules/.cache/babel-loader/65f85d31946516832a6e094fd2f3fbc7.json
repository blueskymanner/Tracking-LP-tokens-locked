{"ast":null,"code":"// import React, {useEffect, useState} from \"react\";\nimport { ethers } from \"ethers\";\nimport unicryptETHabi from \"../abi/unicryptETH_abi.json\";\nimport uniswapETHabi from \"../abi/uniswapETH_abi.json\";\nimport BigNumber from \"bignumber.js\";\nimport { createClient } from 'urql'; // import Axios from \"axios\";\n\nconst unicryptAddressETH = \"0x663A5C229c09b049E36dCc11a9B0d4a8Eb9db214\";\n\nasync function UnicryptETH() {\n  let provider = ethers.getDefaultProvider();\n  const unicryptETHPortal = new ethers.Contract(unicryptAddressETH, unicryptETHabi, provider);\n  let total_tokenNums = await unicryptETHPortal.getNumLockedTokens();\n  const APIURL = 'https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v2';\n  const ethpriceQuery = `\n      query {\n        bundle(id: \"1\" ) {\n          ethPrice\n        }\n      }\n    `;\n  const client = createClient({\n    url: APIURL\n  });\n  const ethData = await client.query(ethpriceQuery).toPromise();\n  let ethPrice = ethData.data.bundle.ethPrice;\n  let tokenAddr = [];\n  const uniswapETHPortal = [];\n  let token0Addr = [];\n  let token1Addr = [];\n  let LPdecimals = [];\n  const tokensQuery0 = [];\n  const tokensQuery1 = [];\n  const tokenData0 = [];\n  let decimals0 = [];\n  let token0Symbol = [];\n  let token0DerivedETH = [];\n  const tokenData1 = [];\n  let decimals1 = [];\n  let token1Symbol = [];\n  let token1DerivedETH = [];\n  let tokenReserves = [];\n  let tokenLockdata = [];\n  let total_supply = [];\n  let percentage = [];\n  let token0Price = [];\n  let token1Price = [];\n  let period = [];\n  let tokensinfo = [];\n  console.log(APIURL);\n\n  for (let i = 0; i < 2; i++) {\n    tokenAddr[i] = await unicryptETHPortal.getLockedTokenAtIndex(total_tokenNums - i - 1);\n    uniswapETHPortal[i] = new ethers.Contract(tokenAddr[i], uniswapETHabi, provider);\n    token0Addr[i] = await uniswapETHPortal[i].token0();\n    token1Addr[i] = await uniswapETHPortal[i].token1();\n    LPdecimals[i] = await uniswapETHPortal[i].decimals(); // let apiurl = `https://api.coingecko.com/api/v3/coins/ethereum/contract/${token1Addr}`;\n    // const { data: datainfo } = await Axios.get(apiurl);\n    // console.log(datainfo.market_data.current_price.usd);\n\n    console.log(LPdecimals[i]);\n    tokensQuery0[i] = `\n        query {\n          token(id: \"${token0Addr[i].toLowerCase()}\"){\n            symbol\n            decimals\n            derivedETH\n          }\n        }\n      `;\n    tokensQuery1[i] = `\n        query {\n          token(id: \"${token1Addr[i].toLowerCase()}\"){\n            symbol\n            decimals\n            derivedETH\n          }\n        }\n      `;\n    tokenData0[i] = await client.query(tokensQuery0[i]).toPromise();\n    decimals0[i] = tokenData0[i].data.token.decimals;\n    token0Symbol[i] = tokenData0[i].data.token.symbol;\n    token0DerivedETH[i] = tokenData0[i].data.token.derivedETH;\n    tokenData1[i] = await client.query(tokensQuery1[i]).toPromise();\n    decimals1[i] = tokenData1[i].data.token.decimals;\n    token1Symbol[i] = tokenData1[i].data.token.symbol;\n    token1DerivedETH[i] = tokenData1[i].data.token.derivedETH;\n    tokenReserves[i] = await uniswapETHPortal[i].getReserves();\n    tokenLockdata[i] = await unicryptETHPortal.tokenLocks(tokenAddr[i], 0);\n    total_supply[i] = await uniswapETHPortal[i].totalSupply();\n    percentage[i] = new BigNumber(tokenLockdata[i][1]._hex).dividedBy(10 ** LPdecimals[i]).dividedBy(new BigNumber(total_supply[i]._hex).dividedBy(10 ** LPdecimals[i]));\n    token0Price[i] = new BigNumber(tokenReserves[i][0]._hex).dividedBy(10 ** decimals0[i]).multipliedBy(new BigNumber(token0DerivedETH[i])).multipliedBy(ethPrice);\n    token1Price[i] = new BigNumber(tokenReserves[i][1]._hex).dividedBy(10 ** decimals1[i]).multipliedBy(new BigNumber(token1DerivedETH[i])).multipliedBy(ethPrice);\n    period[i] = new BigNumber(tokenLockdata[i][3]._hex).minus(new BigNumber(tokenLockdata[i][0]._hex)).dividedBy(86400);\n    tokensinfo.push({\n      tokenName: token0Symbol[i] + \" / \" + token1Symbol[i],\n      blockchain: \"Ethereum\",\n      lockedPrice: \"$\" + token0Price[i].plus(token1Price[i]).multipliedBy(percentage[i]).toFormat(0),\n      lockedAmount: new BigNumber(tokenLockdata[i][1]._hex).dividedBy(10 ** LPdecimals[i]).toFormat(2) + \" (\" + percentage[i].multipliedBy(100).toFormat(1) + \"%)\",\n      unlockPeriod: period[i].toFormat(0) + \"days\",\n      locker: \"Unicrypt\",\n      marketCap: \"$\" + token0Price[i].plus(token1Price[i]).toFormat(0),\n      rank: \"-\",\n      score: token0Price[i].plus(token1Price[i]).multipliedBy(percentage[i]).multipliedBy(period[i]).multipliedBy(percentage[i]).toFormat(0)\n    });\n  } // console.log('retrived eth token info.....');\n\n\n  return tokensinfo;\n}\n\n_c = UnicryptETH;\nexport default UnicryptETH;\n\nvar _c;\n\n$RefreshReg$(_c, \"UnicryptETH\");","map":{"version":3,"sources":["D:/My Data/backup/GIT/Tracking-LP-tokens-locked/src/Table/unicryptETH.js"],"names":["ethers","unicryptETHabi","uniswapETHabi","BigNumber","createClient","unicryptAddressETH","UnicryptETH","provider","getDefaultProvider","unicryptETHPortal","Contract","total_tokenNums","getNumLockedTokens","APIURL","ethpriceQuery","client","url","ethData","query","toPromise","ethPrice","data","bundle","tokenAddr","uniswapETHPortal","token0Addr","token1Addr","LPdecimals","tokensQuery0","tokensQuery1","tokenData0","decimals0","token0Symbol","token0DerivedETH","tokenData1","decimals1","token1Symbol","token1DerivedETH","tokenReserves","tokenLockdata","total_supply","percentage","token0Price","token1Price","period","tokensinfo","console","log","i","getLockedTokenAtIndex","token0","token1","decimals","toLowerCase","token","symbol","derivedETH","getReserves","tokenLocks","totalSupply","_hex","dividedBy","multipliedBy","minus","push","tokenName","blockchain","lockedPrice","plus","toFormat","lockedAmount","unlockPeriod","locker","marketCap","rank","score"],"mappings":"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","sourcesContent":["// import React, {useEffect, useState} from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport unicryptETHabi from \"../abi/unicryptETH_abi.json\";\r\nimport uniswapETHabi from \"../abi/uniswapETH_abi.json\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport { createClient } from 'urql'\r\n// import Axios from \"axios\";\r\n\r\nconst unicryptAddressETH = \"0x663A5C229c09b049E36dCc11a9B0d4a8Eb9db214\";\r\n\r\nasync function UnicryptETH() {\r\n  \r\n    let provider = ethers.getDefaultProvider();\r\n    const unicryptETHPortal = new ethers.Contract(unicryptAddressETH, unicryptETHabi, provider);\r\n    let total_tokenNums = await unicryptETHPortal.getNumLockedTokens();\r\n\r\n    const APIURL = 'https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v2';\r\n    const ethpriceQuery = `\r\n      query {\r\n        bundle(id: \"1\" ) {\r\n          ethPrice\r\n        }\r\n      }\r\n    `; \r\n    const client = createClient({\r\n      url: APIURL,\r\n    });\r\n    const ethData = await client.query(ethpriceQuery).toPromise();\r\n    let ethPrice = ethData.data.bundle.ethPrice;\r\n  \r\n    let tokenAddr = [];\r\n    const uniswapETHPortal = [];\r\n    let token0Addr = [];\r\n    let token1Addr = [];\r\n    let LPdecimals = [];\r\n    const tokensQuery0 = [];\r\n    const tokensQuery1 = [];\r\n    const tokenData0 = [];\r\n    let decimals0 = [];\r\n    let token0Symbol = [];\r\n    let token0DerivedETH = [];\r\n    const tokenData1 = [];\r\n    let decimals1 = [];\r\n    let token1Symbol = [];\r\n    let token1DerivedETH = [];\r\n    let tokenReserves = [];\r\n    let tokenLockdata = [];\r\n    let total_supply = [];\r\n    let percentage = [];\r\n    let token0Price = [];\r\n    let token1Price = [];\r\n    let period = [];\r\n  \r\n    let tokensinfo = [];\r\n    console.log(APIURL);\r\n    for (let i = 0; i < 2; i++) {\r\n      tokenAddr[i] = await unicryptETHPortal.getLockedTokenAtIndex(total_tokenNums - i - 1);\r\n  \r\n      uniswapETHPortal[i] = new ethers.Contract(tokenAddr[i], uniswapETHabi, provider);\r\n      token0Addr[i] = await uniswapETHPortal[i].token0();\r\n      token1Addr[i] = await uniswapETHPortal[i].token1();\r\n      LPdecimals[i] = await uniswapETHPortal[i].decimals();\r\n  \r\n      // let apiurl = `https://api.coingecko.com/api/v3/coins/ethereum/contract/${token1Addr}`;\r\n      // const { data: datainfo } = await Axios.get(apiurl);\r\n      // console.log(datainfo.market_data.current_price.usd);\r\n  console.log(LPdecimals[i]);\r\n      tokensQuery0[i] = `\r\n        query {\r\n          token(id: \"${token0Addr[i].toLowerCase()}\"){\r\n            symbol\r\n            decimals\r\n            derivedETH\r\n          }\r\n        }\r\n      `;\r\n      tokensQuery1[i] = `\r\n        query {\r\n          token(id: \"${token1Addr[i].toLowerCase()}\"){\r\n            symbol\r\n            decimals\r\n            derivedETH\r\n          }\r\n        }\r\n      `;\r\n\r\n      tokenData0[i] = await client.query(tokensQuery0[i]).toPromise();\r\n      decimals0[i] = tokenData0[i].data.token.decimals;\r\n      token0Symbol[i] = tokenData0[i].data.token.symbol;\r\n      token0DerivedETH[i] = tokenData0[i].data.token.derivedETH;\r\n\r\n      tokenData1[i] = await client.query(tokensQuery1[i]).toPromise();\r\n      decimals1[i] = tokenData1[i].data.token.decimals;\r\n      token1Symbol[i] = tokenData1[i].data.token.symbol;\r\n      token1DerivedETH[i] = tokenData1[i].data.token.derivedETH;\r\n      \r\n      tokenReserves[i] = await uniswapETHPortal[i].getReserves();\r\n      tokenLockdata[i] = await unicryptETHPortal.tokenLocks(tokenAddr[i], 0);\r\n      total_supply[i] = await uniswapETHPortal[i].totalSupply();\r\n\r\n      percentage[i] = new BigNumber(tokenLockdata[i][1]._hex).dividedBy(10**LPdecimals[i]).dividedBy(new BigNumber(total_supply[i]._hex).dividedBy(10**LPdecimals[i]));\r\n      token0Price[i] = new BigNumber(tokenReserves[i][0]._hex).dividedBy(10**decimals0[i]).multipliedBy(new BigNumber(token0DerivedETH[i])).multipliedBy(ethPrice);\r\n      token1Price[i] = new BigNumber(tokenReserves[i][1]._hex).dividedBy(10**decimals1[i]).multipliedBy(new BigNumber(token1DerivedETH[i])).multipliedBy(ethPrice);\r\n      period[i] = new BigNumber(tokenLockdata[i][3]._hex).minus(new BigNumber(tokenLockdata[i][0]._hex)).dividedBy(86400);\r\n\r\n      tokensinfo.push({ tokenName: token0Symbol[i] + \" / \" + token1Symbol[i], \r\n                        blockchain: \"Ethereum\",\r\n                        lockedPrice: \"$\" + token0Price[i].plus(token1Price[i]).multipliedBy(percentage[i]).toFormat(0), \r\n                        lockedAmount: new BigNumber(tokenLockdata[i][1]._hex).dividedBy(10**LPdecimals[i]).toFormat(2) + \" (\" + percentage[i].multipliedBy(100).toFormat(1) + \"%)\", \r\n                        unlockPeriod: period[i].toFormat(0) + \"days\", \r\n                        locker: \"Unicrypt\", \r\n                        marketCap: \"$\" + token0Price[i].plus(token1Price[i]).toFormat(0), \r\n                        rank: \"-\", \r\n                        score: token0Price[i].plus(token1Price[i]).multipliedBy(percentage[i]).multipliedBy(period[i]).multipliedBy(percentage[i]).toFormat(0) });\r\n    }\r\n    // console.log('retrived eth token info.....');\r\n    return tokensinfo;\r\n  }\r\n\r\nexport default UnicryptETH;\r\n"]},"metadata":{},"sourceType":"module"}