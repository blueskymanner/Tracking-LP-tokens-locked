[{"E:\\sample\\track_locked_projects\\react_table\\src\\index.js":"1","E:\\sample\\track_locked_projects\\react_table\\src\\App.js":"2","E:\\sample\\track_locked_projects\\react_table\\src\\reportWebVitals.js":"3","E:\\sample\\track_locked_projects\\react_table\\src\\Table\\index.js":"4","E:\\sample\\track_locked_projects\\react_table\\src\\Header\\index.js":"5","E:\\sample\\track_locked_projects\\react_table\\src\\Footer\\index.js":"6","D:\\My Data\\backup\\GIT\\Tracking-LP-tokens-locked\\src\\index.js":"7","D:\\My Data\\backup\\GIT\\Tracking-LP-tokens-locked\\src\\App.js":"8","D:\\My Data\\backup\\GIT\\Tracking-LP-tokens-locked\\src\\reportWebVitals.js":"9","D:\\My Data\\backup\\GIT\\Tracking-LP-tokens-locked\\src\\Header\\index.js":"10","D:\\My Data\\backup\\GIT\\Tracking-LP-tokens-locked\\src\\Table\\index.js":"11","D:\\My Data\\backup\\GIT\\Tracking-LP-tokens-locked\\src\\Footer\\index.js":"12","D:\\My Data\\backup\\GIT\\Tracking-LP-tokens-locked\\src\\Table\\unicryptETH.js":"13","D:\\My Data\\backup\\GIT\\Tracking-LP-tokens-locked\\src\\Table\\unicryptBSC.js":"14","D:\\My Data\\backup\\GIT\\Tracking-LP-tokens-locked\\src\\Table\\multicallBSC.js":"15","D:\\My Data\\backup\\GIT\\Tracking-LP-tokens-locked\\src\\Table\\multicallETH.js":"16","D:\\My Data\\backup\\GIT\\Tracking-LP-tokens-locked\\src\\utils\\getETHweb3.js":"17","D:\\My Data\\backup\\GIT\\Tracking-LP-tokens-locked\\src\\utils\\getBSCweb3.js":"18","D:\\My Data\\backup\\GIT\\Tracking-LP-tokens-locked\\src\\Table\\deepLocker.js":"19"},{"size":500,"mtime":1642667496516,"results":"20","hashOfConfig":"21"},{"size":264,"mtime":1642821237885,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1642667496767,"results":"23","hashOfConfig":"21"},{"size":14407,"mtime":1643143451738,"results":"24","hashOfConfig":"21"},{"size":790,"mtime":1642821234350,"results":"25","hashOfConfig":"21"},{"size":217,"mtime":1642821236522,"results":"26","hashOfConfig":"21"},{"size":500,"mtime":1642667496516,"results":"27","hashOfConfig":"28"},{"size":264,"mtime":1642821237885,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":1642667496767,"results":"30","hashOfConfig":"28"},{"size":790,"mtime":1642821234350,"results":"31","hashOfConfig":"28"},{"size":9171,"mtime":1643754786049,"results":"32","hashOfConfig":"28"},{"size":217,"mtime":1642821236522,"results":"33","hashOfConfig":"28"},{"size":5696,"mtime":1643780208522,"results":"34","hashOfConfig":"28"},{"size":4682,"mtime":1643780209672,"results":"35","hashOfConfig":"28"},{"size":769,"mtime":1643653390000,"results":"36","hashOfConfig":"28"},{"size":1246,"mtime":1643653386608,"results":"37","hashOfConfig":"28"},{"size":267,"mtime":1643653391646,"results":"38","hashOfConfig":"28"},{"size":239,"mtime":1643653392702,"results":"39","hashOfConfig":"28"},{"size":4893,"mtime":1643782220550,"results":"40","hashOfConfig":"28"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"1n68b9g",{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"43"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"qgii80",{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"59"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"59"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\sample\\track_locked_projects\\react_table\\src\\index.js",[],["85","86"],"E:\\sample\\track_locked_projects\\react_table\\src\\App.js",["87"],"import logo from './logo.svg';\nimport './App.css';\nimport Header from './Header';\nimport Table from './Table';\nimport Footer from './Footer';\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Table />\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","E:\\sample\\track_locked_projects\\react_table\\src\\reportWebVitals.js",[],"E:\\sample\\track_locked_projects\\react_table\\src\\Table\\index.js",["88","89","90","91"],"import React, {useEffect, useState} from \"react\";\r\nimport { useTable, useGlobalFilter, useAsyncDebounce, useSortBy, usePagination } from \"react-table\";\r\n// import get_gFees from './getdata.js';\r\nimport { ethers } from \"ethers\";\r\nimport unicryptETHabi from \"../abi/unicryptETH_abi.json\";\r\nimport uniswapETHabi from \"../abi/uniswapETH_abi.json\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport { createClient } from 'urql'\r\nimport Axios from \"axios\";\r\nimport '../Style/style.css';\r\n\r\nconst unicryptAddressETH = \"0x663A5C229c09b049E36dCc11a9B0d4a8Eb9db214\";\r\n// const unicryptAddressBSC = \"0xC765bddB93b0D1c1A88282BA0fa6B2d00E3e0c83\";\r\n\r\nfunction GlobalFilter({\r\n  preGlobalFilteredRows,\r\n  globalFilter,\r\n  setGlobalFilter\r\n}) {\r\n  const count = preGlobalFilteredRows.length;\r\n  const [value, setValue] = React.useState(globalFilter);\r\n  const onChange = useAsyncDebounce(async (value) => {\r\n    setGlobalFilter(value || undefined);\r\n    // let abc = await getAddress();\r\n    // console.log(abc);\r\n  }, 200);\r\n\r\n  return (\r\n    <span>\r\n      Search: {\" \"}\r\n      <input\r\n        value={value || \"\"}\r\n        onChange={(e) => {\r\n          setValue(e.target.value);\r\n          onChange(e.target.value);\r\n        }}\r\n        placeholder={`Enter Keyword`}\r\n      />\r\n    </span>\r\n  );\r\n}\r\n\r\nfunction Actiontable({ columns, data }) {\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    footerGroups,\r\n    prepareRow,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize },\r\n    state,\r\n    preGlobalFilteredRows,\r\n    setGlobalFilter\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: { pageSize: 20 }\r\n    },\r\n    useGlobalFilter, useSortBy, usePagination\r\n  );\r\n\r\n  // console.log();\r\n\r\n  // Render the UI for your table\r\n  return (\r\n    <>\r\n      <div className=\"content\">\r\n        <div className=\"tablesection\">\r\n          <table\r\n            {...getTableProps()}\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th\r\n                  colSpan={100}\r\n                  style={{\r\n                    textAlign: \"left\",\r\n                    padding: 10,\r\n                    background: \"yellow\"\r\n                  }}\r\n                >\r\n                  <GlobalFilter\r\n                    preGlobalFilteredRows={preGlobalFilteredRows}\r\n                    globalFilter={state.globalFilter}\r\n                    setGlobalFilter={setGlobalFilter}\r\n                  />\r\n                </th>\r\n              </tr>\r\n\r\n              {headerGroups.map((group) => (\r\n                <tr {...group.getHeaderGroupProps()}>\r\n                  {group.headers.map((column) => (\r\n                    <th {...column.getHeaderProps(column.getSortByToggleProps())}>{column.render(\"Header\")}\r\n                    {/* <span>{\r\n                      column.isSorted\r\n                          ? column.isSortedDesc\r\n                                ? ' ?'\r\n                                : ' ?'\r\n                          : ''\r\n                    }</span> */}\r\n                    </th>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n              {page.map((row, i) => {\r\n                prepareRow(row);\r\n                return (\r\n                  <tr {...row.getRowProps()}>\r\n                    {row.cells.map((cell) => {\r\n                      return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>;\r\n                    })}\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n            {/* <tfoot>\r\n              {footerGroups.map((group) => (\r\n                <tr {...group.getFooterGroupProps()}>\r\n                  {group.headers.map((column) => (\r\n                    <td {...column.getFooterProps()}>{column.render(\"Footer\")}</td>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </tfoot> */}\r\n          </table>\r\n        </div>\r\n\r\n        <div className=\"pagination\">\r\n          <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n            {\"<<\"}\r\n          </button>{\" \"}\r\n          <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n            {\"<\"}\r\n          </button>{\" \"}\r\n          <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n            {\">\"}\r\n          </button>{\" \"}\r\n          <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n            {\">>\"}\r\n          </button>{\" \"}\r\n          <span>\r\n            Page{\" \"}\r\n            <strong>\r\n              {pageIndex + 1} of {pageCount}\r\n            </strong>{\" \"}\r\n          </span>\r\n          <span>\r\n            | Go to page:{\" \"}\r\n            <input\r\n              type=\"number\"\r\n              defaultValue={pageIndex + 1}\r\n              onChange={(e) => {\r\n                const page = e.target.value ? Number(e.target.value) - 1 : 0;\r\n                gotoPage(page);\r\n              }}\r\n              style={{ width: \"100px\" }}\r\n            />\r\n          </span>{\" \"}\r\n          <select\r\n            value={pageSize}\r\n            onChange={(e) => {\r\n              setPageSize(Number(e.target.value));\r\n            }}\r\n          >\r\n            {[20, 30, 40, 50].map((pageSize) => (\r\n              <option key={pageSize} value={pageSize}>\r\n                Show {pageSize}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nasync function GetAddress() {\r\n  \r\n  let provider = ethers.getDefaultProvider();\r\n  const unicryptETHPortal = new ethers.Contract(unicryptAddressETH, unicryptETHabi, provider);\r\n  let total_tokenNums = await unicryptETHPortal.getNumLockedTokens();\r\n  let tokenAddr = await unicryptETHPortal.getLockedTokenAtIndex(total_tokenNums - 1);\r\n\r\n  const uniswapETHPortal = new ethers.Contract(tokenAddr, uniswapETHabi, provider);\r\n  let token0Addr = await uniswapETHPortal.token0();\r\n  let token1Addr = await uniswapETHPortal.token1();\r\n  let LPdecimals = await uniswapETHPortal.decimals();\r\n\r\n  // let apiurl = `https://api.coingecko.com/api/v3/coins/ethereum/contract/${token1Addr}`;\r\n  // const { data: datainfo } = await Axios.get(apiurl);\r\n  // console.log(datainfo.market_data.current_price.usd);\r\n\r\n  const APIURL = 'https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v2';\r\n  const ethpriceQuery = `\r\n    query {\r\n      bundle(id: \"1\" ) {\r\n        ethPrice\r\n      }\r\n    }\r\n  `; \r\n  const tokensQuery0 = `\r\n    query {\r\n      token(id: \"${token0Addr.toLowerCase()}\"){\r\n        name\r\n        symbol\r\n        decimals\r\n        derivedETH\r\n        tradeVolumeUSD\r\n        totalLiquidity\r\n      }\r\n    }\r\n  `;\r\n  const tokensQuery1 = `\r\n    query {\r\n      token(id: \"${token1Addr.toLowerCase()}\"){\r\n        name\r\n        symbol\r\n        decimals\r\n        derivedETH\r\n        tradeVolumeUSD\r\n        totalLiquidity\r\n      }\r\n    }\r\n  `;\r\n\r\n  const client = createClient({\r\n    url: APIURL,\r\n  });\r\n  const ethData = await client.query(ethpriceQuery).toPromise();\r\n  let ethPrice = ethData.data.bundle.ethPrice;\r\n\r\n  const tokenData0 = await client.query(tokensQuery0).toPromise();\r\n  let decimals0 = tokenData0.data.token.decimals;\r\n  let token0Symbol = tokenData0.data.token.symbol;\r\n  let token0DerivedETH = tokenData0.data.token.derivedETH;\r\n\r\n  const tokenData1 = await client.query(tokensQuery1).toPromise();\r\n  let decimals1 = tokenData1.data.token.decimals;\r\n  let token1Symbol = tokenData1.data.token.symbol;\r\n  let token1DerivedETH = tokenData1.data.token.derivedETH;\r\n  \r\n  let tokenReserves = await uniswapETHPortal.getReserves();\r\n  let token0Reserve = new BigNumber(tokenReserves[0]._hex).dividedBy(new BigNumber(10).pow(decimals0));\r\n  let token1Reserve = new BigNumber(tokenReserves[1]._hex).dividedBy(new BigNumber(10).pow(decimals1));\r\n\r\n  let tokenLockdata = await unicryptETHPortal.tokenLocks(tokenAddr, 0);\r\n  let lockedAmount = new BigNumber(tokenLockdata[1]._hex).dividedBy(new BigNumber(10).pow(LPdecimals));\r\n  let roundAmount = lockedAmount.toFormat(4);\r\n\r\n  let total_supply = await uniswapETHPortal.totalSupply();\r\n  let totalSupply = new BigNumber(total_supply._hex).dividedBy(new BigNumber(10).pow(LPdecimals));\r\n\r\n  let percentage = lockedAmount.dividedBy(totalSupply);\r\n  let percent = percentage.multipliedBy(new BigNumber(100)).toFormat(1);\r\n\r\n  let token0Price = token0Reserve.multipliedBy(new BigNumber(token0DerivedETH)).multipliedBy(new BigNumber(ethPrice));\r\n  let token1Price = token1Reserve.multipliedBy(new BigNumber(token1DerivedETH)).multipliedBy(new BigNumber(ethPrice));\r\n  let LPmarketcap = token0Price.plus(token1Price);\r\n  let lockedPrice = LPmarketcap.multipliedBy(percentage);\r\n  let roundPrice = lockedPrice.toFormat(0);\r\n\r\n  let lockDate = new BigNumber(tokenLockdata[0]._hex);\r\n  let unlockDate = new BigNumber(tokenLockdata[3]._hex);\r\n  let period = unlockDate.minus(lockDate).dividedBy(new BigNumber(86400));\r\n  let roundPeriod = period.toFormat(0);\r\n\r\n  let roundMarketCap = LPmarketcap.toFormat(0);\r\n  let score = lockedPrice.multipliedBy(period).multipliedBy(percentage).toFormat(0);\r\n\r\n  // token0Symbol + \" / \" + token1Symbol, Ethereum, \"$\" + roundPrice, roundAmount + \" (\" + percent + \"%)\", roundPeriod + \"days\", Unicrypt, \"$\" + roundMarketCap, \" \", score\r\n  // return roundAmount + \" (\" + percent + \"%)\";\r\n  return { tokenName: token0Symbol + \" / \" + token1Symbol, \r\n            blockchain: \"Ethereum\", \r\n            lockedPrice: \"$\" + roundPrice, \r\n            lockedAmount: roundAmount + \" (\" + percent + \"%)\", \r\n            unlockPeriod: roundPeriod + \"days\", \r\n            locker: \"Unicrypt\", \r\n            marketCap: \"$\" + roundMarketCap, \r\n            rank: \" \", \r\n            score: score };\r\n}\r\n\r\nfunction Table() {\r\n  const [tokenInfo, setTokenInfo] = useState({});\r\n    GetAddress().then(resp =>\r\n    {\r\n      setTokenInfo(resp);\r\n    });\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Token Name\",\r\n        accessor: \"first\"\r\n      },\r\n      {\r\n        Header: \"Blockchain\",\r\n        accessor: \"second\"\r\n      },\r\n      {\r\n        Header: \"Liquidity Locked $\",\r\n        accessor: \"third\"\r\n      },\r\n      {\r\n        Header: \"Tokens Locked %\",\r\n        accessor: \"fourth\"\r\n      },\r\n      {\r\n        Header: \"Time to unlock\",\r\n        accessor: \"fifth\"\r\n      },\r\n      {\r\n        Header: \"Locker\",\r\n        accessor: \"sixth\"\r\n      },\r\n      {\r\n        Header: \"Marketcap $\",\r\n        accessor: \"seventh\"\r\n      },\r\n      {\r\n        Header: \"Coingecko Rank #\",\r\n        accessor: \"eighth\"\r\n      },\r\n      {\r\n        Header: \"Score\",\r\n        accessor: \"ninth\"\r\n      }\r\n    ],\r\n    []\r\n  );\r\n\r\n  const data = React.useMemo(\r\n    () => [\r\n      {\r\n        first: tokenInfo.tokenName,\r\n        second: tokenInfo.blockchain,\r\n        third: tokenInfo.lockedPrice,\r\n        fourth: tokenInfo.lockedAmount,\r\n        fifth: tokenInfo.unlockPeriod,\r\n        sixth: tokenInfo.locker,\r\n        seventh: tokenInfo.marketCap,\r\n        eighth: tokenInfo.rank,\r\n        ninth: tokenInfo.score\r\n      },\r\n      {\r\n        first: \"Pinkcow\",\r\n        second: \"Ethereum\",\r\n        third: 4578600,\r\n        fourth: 122111,\r\n        fifth: 20,\r\n        sixth: \"Deeplock\",\r\n        seventh: 2340000,\r\n        eighth: 5455,\r\n        ninth: 18890\r\n      },\r\n      {\r\n        first: \"Fake\",\r\n        second: \"Ethereum\",\r\n        third: 457899,\r\n        fourth: 400000,\r\n        fifth: 15,\r\n        sixth: \"Unicrypt\",\r\n        seventh: 755555000,\r\n        eighth: 23,\r\n        ninth: 700\r\n      },\r\n      {\r\n        first: \"Fake\",\r\n        second: \"Ethereum\",\r\n        third: 457899,\r\n        fourth: 400000,\r\n        fifth: 15,\r\n        sixth: \"Unicrypt\",\r\n        seventh: 755555000,\r\n        eighth: 23,\r\n        ninth: 700\r\n      },\r\n      {\r\n        first: \"safemoon\",\r\n        second: \"BSC\",\r\n        third: 3200000,\r\n        fourth: 100000000,\r\n        fifth: 7,\r\n        sixth: \"Mudra\",\r\n        seventh: 23457777,\r\n        eighth: 122,\r\n        ninth: 13569000\r\n      },\r\n      {\r\n        first: \"Fake\",\r\n        second: \"Ethereum\",\r\n        third: 457899,\r\n        fourth: 400000,\r\n        fifth: 15,\r\n        sixth: \"Unicrypt\",\r\n        seventh: 755555000,\r\n        eighth: 23,\r\n        ninth: 700\r\n      },\r\n      {\r\n        first: \"Fake\",\r\n        second: \"Ethereum\",\r\n        third: 457899,\r\n        fourth: 400000,\r\n        fifth: 15,\r\n        sixth: \"Cryptoexlock\",\r\n        seventh: 755555000,\r\n        eighth: 23,\r\n        ninth: 700\r\n      },\r\n      {\r\n        first: \"Fake\",\r\n        second: \"Ethereum\",\r\n        third: 457899,\r\n        fourth: 400000,\r\n        fifth: 15,\r\n        sixth: \"Deeplock\",\r\n        seventh: 755555000,\r\n        eighth: 23,\r\n        ninth: 700\r\n      },\r\n      {\r\n        first: \"safemoon\",\r\n        second: \"BSC\",\r\n        third: 3200000,\r\n        fourth: 100000000,\r\n        fifth: 7,\r\n        sixth: \"Unicrypt\",\r\n        seventh: 23457777,\r\n        eighth: 122,\r\n        ninth: 13569000\r\n      },\r\n      {\r\n        first: \"Fake\",\r\n        second: \"Ethereum\",\r\n        third: 457899,\r\n        fourth: 400000,\r\n        fifth: 15,\r\n        sixth: \"Unilocker\",\r\n        seventh: 755555000,\r\n        eighth: 23,\r\n        ninth: 700\r\n      },\r\n      {\r\n        first: \"Fake\",\r\n        second: \"Ethereum\",\r\n        third: 457899,\r\n        fourth: 400000,\r\n        fifth: 15,\r\n        sixth: \"Unicrypt\",\r\n        seventh: 755555000,\r\n        eighth: 23,\r\n        ninth: 700\r\n      },\r\n      {\r\n        first: \"Fake\",\r\n        second: \"Ethereum\",\r\n        third: 457899,\r\n        fourth: 400000,\r\n        fifth: 15,\r\n        sixth: \"Trustswap\",\r\n        seventh: 755555000,\r\n        eighth: 23,\r\n        ninth: 700\r\n      },\r\n      {\r\n        first: \"safemoon\",\r\n        second: \"BSC\",\r\n        third: 3200000,\r\n        fourth: 100000000,\r\n        fifth: 7,\r\n        sixth: \"Unicrypt\",\r\n        seventh: 23457777,\r\n        eighth: 122,\r\n        ninth: 13569000\r\n      },\r\n      {\r\n        first: \"Fake\",\r\n        second: \"Ethereum\",\r\n        third: 457899,\r\n        fourth: 400000,\r\n        fifth: 15,\r\n        sixth: \"Pinksale\",\r\n        seventh: 755555000,\r\n        eighth: 23,\r\n        ninth: 700\r\n      }\r\n    ],\r\n    [tokenInfo]\r\n  );\r\n\r\n  return <Actiontable columns={columns} data={data} />;\r\n}\r\n\r\nexport default Table;\r\n","E:\\sample\\track_locked_projects\\react_table\\src\\Header\\index.js",["92","93","94","95","96"],"import React from \"react\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"navbar\">\r\n                <a href=\"#\" className=\"active left\" > <img src=\"/assets/images/Lock.png\" alt='' height=\"30\" width=\"30\" /> </a> \r\n                <a href=\"#\" className=\"logo left\"> <b> Track Locker </b> </a> \r\n                <a href=\"#\" className=\"right\"> <img src=\"/assets/images/medium.svg\" alt='' height=\"20\" width=\"20\" /> </a> \r\n                <a href=\"#\" className=\"right\"> <img src=\"/assets/images/twitter.svg\" alt='' height=\"20\" width=\"20\" /> </a>\r\n                <a href=\"#\" className=\"right\"> <img src=\"/assets/images/telegram.svg\" alt='' height=\"20\" width=\"20\" /> </a>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","E:\\sample\\track_locked_projects\\react_table\\src\\Footer\\index.js",[],"D:\\My Data\\backup\\GIT\\Tracking-LP-tokens-locked\\src\\index.js",[],["97","98"],"D:\\My Data\\backup\\GIT\\Tracking-LP-tokens-locked\\src\\App.js",["99"],"D:\\My Data\\backup\\GIT\\Tracking-LP-tokens-locked\\src\\reportWebVitals.js",[],"D:\\My Data\\backup\\GIT\\Tracking-LP-tokens-locked\\src\\Header\\index.js",["100","101","102","103","104"],"D:\\My Data\\backup\\GIT\\Tracking-LP-tokens-locked\\src\\Table\\index.js",["105","106"],"import React, {useEffect, useState} from \"react\";\r\nimport { useTable, useGlobalFilter, useAsyncDebounce, useSortBy, usePagination } from \"react-table\";\r\nimport UnicryptETH from './unicryptETH.js';\r\nimport UnicryptBSC from './unicryptBSC.js';\r\nimport DeepLocker from './deepLocker.js';\r\nimport '../Style/style.css';\r\n\r\nfunction GlobalFilter({\r\n  preGlobalFilteredRows,\r\n  globalFilter,\r\n  setGlobalFilter\r\n}) {\r\n  const count = preGlobalFilteredRows.length;\r\n  const [value, setValue] = React.useState(globalFilter);\r\n  const onChange = useAsyncDebounce(async (value) => {\r\n    setGlobalFilter(value || undefined);\r\n  }, 200);\r\n\r\n  return (\r\n    <span>\r\n      Search: {\" \"}\r\n      <input\r\n        value={value || \"\"}\r\n        onChange={(e) => {\r\n          setValue(e.target.value);\r\n          onChange(e.target.value);\r\n        }}\r\n        placeholder={`Enter Keyword`}\r\n      />\r\n    </span>\r\n  );\r\n}\r\n\r\nfunction Actiontable({ columns, data }) {\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    footerGroups,\r\n    prepareRow,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize },\r\n    state,\r\n    preGlobalFilteredRows,\r\n    setGlobalFilter\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: { pageSize: 10 }\r\n    },\r\n    useGlobalFilter, useSortBy, usePagination\r\n  );\r\n\r\n  // Render the UI for your table\r\n  return (\r\n    <>\r\n      <div className=\"content\">\r\n        <div className=\"tablesection\">\r\n          <table\r\n            {...getTableProps()}\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th\r\n                  colSpan={100}\r\n                  style={{\r\n                    textAlign: \"left\",\r\n                    padding: 10,\r\n                    background: \"yellow\"\r\n                  }}\r\n                >\r\n                  <GlobalFilter\r\n                    preGlobalFilteredRows={preGlobalFilteredRows}\r\n                    globalFilter={state.globalFilter}\r\n                    setGlobalFilter={setGlobalFilter}\r\n                  />\r\n                </th>\r\n              </tr>\r\n\r\n              {headerGroups.map((group) => (\r\n                <tr {...group.getHeaderGroupProps()}>\r\n                  {group.headers.map((column) => (\r\n                    <th {...column.getHeaderProps(column.getSortByToggleProps())}>{column.render(\"Header\")}\r\n                    {/* <span>{\r\n                      column.isSorted\r\n                          ? column.isSortedDesc\r\n                                ? ' ?'\r\n                                : ' ?'\r\n                          : ''\r\n                    }</span> */}\r\n                    </th>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n              {page.map((row, i) => {\r\n                prepareRow(row);\r\n                return (\r\n                  <tr {...row.getRowProps()}>\r\n                    {row.cells.map((cell) => {\r\n                      return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>;\r\n                    })}\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n            {/* <tfoot>\r\n              {footerGroups.map((group) => (\r\n                <tr {...group.getFooterGroupProps()}>\r\n                  {group.headers.map((column) => (\r\n                    <td {...column.getFooterProps()}>{column.render(\"Footer\")}</td>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </tfoot> */}\r\n          </table>\r\n        </div>\r\n\r\n        <div className=\"pagination\">\r\n          <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n            {\"<<\"}\r\n          </button>{\" \"}\r\n          <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n            {\"<\"}\r\n          </button>{\" \"}\r\n          <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n            {\">\"}\r\n          </button>{\" \"}\r\n          <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n            {\">>\"}\r\n          </button>{\" \"}\r\n          <span>\r\n            Page{\" \"}\r\n            <strong>\r\n              {pageIndex + 1} of {pageCount}\r\n            </strong>{\" \"}\r\n          </span>\r\n          <span>\r\n            | Go to page:{\" \"}\r\n            <input\r\n              type=\"number\"\r\n              defaultValue={pageIndex + 1}\r\n              onChange={(e) => {\r\n                const page = e.target.value ? Number(e.target.value) - 1 : 0;\r\n                gotoPage(page);\r\n              }}\r\n              style={{ width: \"100px\" }}\r\n            />\r\n          </span>{\" \"}\r\n          <select\r\n            value={pageSize}\r\n            onChange={(e) => {\r\n              setPageSize(Number(e.target.value));\r\n            }}\r\n          >\r\n            {[10, 20, 30, 40].map((pageSize) => (\r\n              <option key={pageSize} value={pageSize}>\r\n                Show {pageSize}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Table() {\r\n  const [ethtoken, setEthtoken] = useState([]);\r\n  const [bsctoken, setBsctoken] = useState([]);\r\n  const [deeptoken, setDeeptoken] = useState([]);\r\n  useEffect(() => {\r\n    UnicryptETH().then(resp =>\r\n    {\r\n      setEthtoken(resp);\r\n    });\r\n    UnicryptBSC().then(resp =>\r\n    {\r\n      setBsctoken(resp);\r\n    });\r\n    DeepLocker().then(resp =>\r\n      {\r\n        setDeeptoken(resp);\r\n    });\r\n  }, []);\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Token Name ↓↑\",\r\n        accessor: \"first\"\r\n      },\r\n      {\r\n        Header: \"Blockchain ↓↑\",\r\n        accessor: \"second\"\r\n      },\r\n      {\r\n        Header: \"Liquidity Locked $\",\r\n        accessor: \"third\"\r\n      },\r\n      {\r\n        Header: \"Tokens Locked %\",\r\n        accessor: \"fourth\"\r\n      },\r\n      {\r\n        Header: \"Time to unlock ↓↑\",\r\n        accessor: \"fifth\"\r\n      },\r\n      {\r\n        Header: \"Locker ↓↑\",\r\n        accessor: \"sixth\"\r\n      },\r\n      {\r\n        Header: \"Marketcap $\",\r\n        accessor: \"seventh\"\r\n      },\r\n      {\r\n        Header: \"Coingecko Rank #\",\r\n        accessor: \"eighth\"\r\n      },\r\n      {\r\n        Header: \"Score ↓↑\",\r\n        accessor: \"ninth\"\r\n      }\r\n    ],\r\n    []\r\n  );\r\n\r\n  const data = React.useMemo(\r\n    () => { if(ethtoken.length || bsctoken.length || deeptoken.length) {\r\n              let tokensInfo = [];\r\n              for(let i = 0; i < ethtoken.length; i++) {\r\n                tokensInfo.push(\r\n                  {\r\n                    first: ethtoken[i].tokenName,\r\n                    second: ethtoken[i].blockchain,\r\n                    third: ethtoken[i].lockedPrice,\r\n                    fourth: ethtoken[i].lockedAmount,\r\n                    fifth: ethtoken[i].unlockPeriod,\r\n                    sixth: ethtoken[i].locker,\r\n                    seventh: ethtoken[i].marketCap,\r\n                    eighth: ethtoken[i].rank,\r\n                    ninth: ethtoken[i].score\r\n                  }\r\n                );\r\n              }\r\n              for(let i = 0; i < bsctoken.length; i++) {\r\n                tokensInfo.push(\r\n                  {\r\n                    first: bsctoken[i].tokenName,\r\n                    second: bsctoken[i].blockchain,\r\n                    third: bsctoken[i].lockedPrice,\r\n                    fourth: bsctoken[i].lockedAmount,\r\n                    fifth: bsctoken[i].unlockPeriod,\r\n                    sixth: bsctoken[i].locker,\r\n                    seventh: bsctoken[i].marketCap,\r\n                    eighth: bsctoken[i].rank,\r\n                    ninth: bsctoken[i].score\r\n                  }\r\n                );\r\n              }\r\n              for(let i = 0; i < deeptoken.length; i++) {\r\n                tokensInfo.push(\r\n                  {\r\n                    first: deeptoken[i].tokenName,\r\n                    second: deeptoken[i].blockchain,\r\n                    third: deeptoken[i].lockedPrice,\r\n                    fourth: deeptoken[i].lockedAmount,\r\n                    fifth: deeptoken[i].unlockPeriod,\r\n                    sixth: deeptoken[i].locker,\r\n                    seventh: deeptoken[i].marketCap,\r\n                    eighth: deeptoken[i].rank,\r\n                    ninth: deeptoken[i].score\r\n                  }\r\n                );\r\n              }\r\n\r\n              return tokensInfo;\r\n            } else { let empty = []; for (let i = 0; i < 10; i++) {\r\n                empty.push(\r\n                  {\r\n                    first: empty[i],\r\n                    second: empty[i],\r\n                    third: empty[i],\r\n                    fourth: empty[i],\r\n                    fifth: empty[i],\r\n                    sixth: empty[i],\r\n                    seventh: empty[i],\r\n                    eighth: empty[i],\r\n                    ninth: empty[i]\r\n                  }\r\n                );\r\n              } return empty; }\r\n          },\r\n        [ethtoken, bsctoken, deeptoken]\r\n  );\r\n\r\n  return <Actiontable columns={columns} data={data} />;\r\n}\r\n\r\nexport default Table;\r\n","D:\\My Data\\backup\\GIT\\Tracking-LP-tokens-locked\\src\\Footer\\index.js",[],"D:\\My Data\\backup\\GIT\\Tracking-LP-tokens-locked\\src\\Table\\unicryptETH.js",["107"],"D:\\My Data\\backup\\GIT\\Tracking-LP-tokens-locked\\src\\Table\\unicryptBSC.js",[],"D:\\My Data\\backup\\GIT\\Tracking-LP-tokens-locked\\src\\Table\\multicallBSC.js",[],"D:\\My Data\\backup\\GIT\\Tracking-LP-tokens-locked\\src\\Table\\multicallETH.js",[],"D:\\My Data\\backup\\GIT\\Tracking-LP-tokens-locked\\src\\utils\\getETHweb3.js",[],"D:\\My Data\\backup\\GIT\\Tracking-LP-tokens-locked\\src\\utils\\getBSCweb3.js",[],"D:\\My Data\\backup\\GIT\\Tracking-LP-tokens-locked\\src\\Table\\deepLocker.js",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":1,"column":8,"nodeType":"114","messageId":"115","endLine":1,"endColumn":12},{"ruleId":"112","severity":1,"message":"116","line":1,"column":16,"nodeType":"114","messageId":"115","endLine":1,"endColumn":25},{"ruleId":"112","severity":1,"message":"117","line":9,"column":8,"nodeType":"114","messageId":"115","endLine":9,"endColumn":13},{"ruleId":"112","severity":1,"message":"118","line":20,"column":9,"nodeType":"114","messageId":"115","endLine":20,"endColumn":14},{"ruleId":"112","severity":1,"message":"119","line":48,"column":5,"nodeType":"114","messageId":"115","endLine":48,"endColumn":17},{"ruleId":"120","severity":1,"message":"121","line":7,"column":17,"nodeType":"122","endLine":7,"endColumn":54},{"ruleId":"120","severity":1,"message":"121","line":8,"column":17,"nodeType":"122","endLine":8,"endColumn":51},{"ruleId":"120","severity":1,"message":"121","line":9,"column":17,"nodeType":"122","endLine":9,"endColumn":47},{"ruleId":"120","severity":1,"message":"121","line":10,"column":17,"nodeType":"122","endLine":10,"endColumn":47},{"ruleId":"120","severity":1,"message":"121","line":11,"column":17,"nodeType":"122","endLine":11,"endColumn":47},{"ruleId":"108","replacedBy":"123"},{"ruleId":"110","replacedBy":"124"},{"ruleId":"112","severity":1,"message":"113","line":1,"column":8,"nodeType":"114","messageId":"115","endLine":1,"endColumn":12},{"ruleId":"120","severity":1,"message":"121","line":7,"column":17,"nodeType":"122","endLine":7,"endColumn":54},{"ruleId":"120","severity":1,"message":"121","line":8,"column":17,"nodeType":"122","endLine":8,"endColumn":51},{"ruleId":"120","severity":1,"message":"121","line":9,"column":17,"nodeType":"122","endLine":9,"endColumn":47},{"ruleId":"120","severity":1,"message":"121","line":10,"column":17,"nodeType":"122","endLine":10,"endColumn":47},{"ruleId":"120","severity":1,"message":"121","line":11,"column":17,"nodeType":"122","endLine":11,"endColumn":47},{"ruleId":"112","severity":1,"message":"118","line":13,"column":9,"nodeType":"114","messageId":"115","endLine":13,"endColumn":14},{"ruleId":"112","severity":1,"message":"119","line":39,"column":5,"nodeType":"114","messageId":"115","endLine":39,"endColumn":17},{"ruleId":"112","severity":1,"message":"117","line":8,"column":8,"nodeType":"114","messageId":"115","endLine":8,"endColumn":13},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Axios' is defined but never used.","'count' is assigned a value but never used.","'footerGroups' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement",["125"],["126"],"no-global-assign","no-unsafe-negation"]